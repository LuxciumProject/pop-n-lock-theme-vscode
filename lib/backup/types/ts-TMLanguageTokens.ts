const names = [
  "case-clause.expr",
  "case-clause.expr ",
  "cast.expr",
  "comment.block.documentation",
  "comment.block",
  "comment.line.double-slash",
  "comment.line.shebang",
  "comment.line.triple-slash.directive",
  "constant.character.control.regexp",
  "constant.character.escape.backslash.regexp",
  "constant.character.escape",
  "constant.character.numeric.regexp",
  "constant.language.access-type.jsdoc",
  "constant.language.boolean.false",
  "constant.language.boolean.true",
  "constant.language.import-export-all",
  "constant.language.infinity",
  "constant.language.nan",
  "constant.language.null",
  "constant.language.symbol-type.jsdoc",
  "constant.language.undefined",
  "constant.numeric.binary",
  "constant.numeric.decimal",
  "constant.numeric.hex",
  "constant.numeric.octal",
  "constant.other.character-class.range.regexp",
  "constant.other.character-class.regexp",
  "constant.other.character-class.set.regexp",
  "constant.other.description.jsdoc",
  "constant.other.email.link.underline.jsdoc",
  "entity.name.function.tagged-template",
  "entity.name.function",
  "entity.name.function variable.language.this",
  "entity.name.label",
  "entity.name.tag.directive",
  "entity.name.tag.inline.jsdoc",
  "entity.name.type.alias",
  "entity.name.type.class",
  "entity.name.type.enum",
  "entity.name.type.instance.jsdoc",
  "entity.name.type.interface",
  "entity.name.type.module",
  "entity.name.type",
  "entity.other.attribute-name.directive",
  "entity.other.inherited-class",
  "invalid.illegal.newline",
  "invalid.illegal.syntax.jsdoc",
  "keyword.control.anchor.regexp",
  "keyword.control.as",
  "keyword.control.conditional",
  "keyword.control.default",
  "keyword.control.export",
  "keyword.control.flow",
  "keyword.control.from",
  "keyword.control.import",
  "keyword.control.loop",
  "keyword.control.new",
  "keyword.control.require",
  "keyword.control.switch",
  "keyword.control.trycatch",
  "keyword.control",
  "keyword.control.with",
  "keyword.generator.asterisk",
  "keyword.operator.arithmetic",
  "keyword.operator.assignment.compound.bitwise",
  "keyword.operator.assignment.compound",
  "keyword.operator.assignment.jsdoc",
  "keyword.operator.assignment",
  "keyword.operator.bitwise.shift",
  "keyword.operator.bitwise",
  "keyword.operator.comparison",
  "keyword.operator.control.jsdoc",
  "keyword.operator.decrement",
  "keyword.operator.definiteassignment",
  "keyword.operator.expression.delete",
  "keyword.operator.expression.import",
  "keyword.operator.expression.in",
  "keyword.operator.expression.infer",
  "keyword.operator.expression.instanceof",
  "keyword.operator.expression.is",
  "keyword.operator.expression.keyof",
  "keyword.operator.expression.of",
  "keyword.operator.expression.typeof",
  "keyword.operator.expression.void",
  "keyword.operator.increment",
  "keyword.operator.logical",
  "keyword.operator.negation.regexp",
  "keyword.operator.new",
  "keyword.operator.optional",
  "keyword.operator.or.regexp",
  "keyword.operator.quantifier.regexp",
  "keyword.operator.relational",
  "keyword.operator.rest",
  "keyword.operator.spread",
  "keyword.operator.ternary",
  "keyword.operator.type.annotation",
  "keyword.operator.type.modifier",
  "keyword.operator.type",
  "keyword.other.back-reference.regexp",
  "keyword.other.debugger",
  "keyword.other",
  "meta.array-binding-pattern-variable",
  "meta.array.literal",
  "meta.arrow",
  "meta.arrow meta.return.type.arrow keyword.operator.type.annotation",
  "meta.assertion.look-ahead.regexp",
  "meta.assertion.look-behind.regexp",
  "meta.assertion.negative-look-ahead.regexp",
  "meta.assertion.negative-look-behind.regexp",
  "meta.block",
  "meta.block punctuation.definition.block",
  "meta.brace.angle",
  "meta.brace.round",
  "meta.brace.square",
  "meta.class",
  "meta.decorator",
  "meta.definition.function entity.name.function",
  "meta.definition.method entity.name.function",
  "meta.definition.property entity.name.function",
  "meta.definition.property variable.object.property",
  "meta.definition.variable entity.name.function",
  "meta.definition.variable variable.other.constant",
  "meta.definition.variable variable.other.constant entity.name.function",
  "meta.definition.variable variable.other.readwrite",
  "meta.delimiter.decimal.period",
  "meta.enum.declaration",
  "meta.example.jsdoc",
  "meta.export.default",
  "meta.export",
  "meta.field.declaration",
  "meta.function-call",
  "meta.function-call punctuation.accessor.optional",
  "meta.function.expression",
  "meta.function",
  "meta.group.assertion.regexp",
  "meta.group.regexp",
  "meta.import-equals.external",
  "meta.import-equals.internal",
  "meta.import",
  "meta.indexer.declaration",
  "meta.indexer.mappedtype.declaration",
  "meta.interface",
  "meta.method.declaration",
  "meta.namespace.declaration",
  "meta.object-binding-pattern-variable",
  "meta.object-literal.key",
  "meta.object-literal.key punctuation.separator.key-value",
  "meta.object.member",
  "meta.object.member meta.object-literal.key",
  "meta.object.type",
  "meta.objectliteral",
  "meta.parameter.object-binding-pattern",
  "meta.parameters",
  "meta.paramter.array-binding-pattern",
  "meta.return.type.arrow",
  "meta.return.type",
  "meta.tag",
  "meta.template.expression",
  "meta.type.annotation",
  "meta.type.constructor",
  "meta.type.constructor keyword.control.new",
  "meta.type.declaration",
  "meta.type.function.return",
  "meta.type.function",
  "meta.type.parameters",
  "meta.type.parameters punctuation.definition.typeparameters.begin",
  "meta.type.parameters punctuation.definition.typeparameters.end",
  "meta.type.paren.cover",
  "meta.type.tuple",
  "meta.var-single-variable.expr",
  "meta.var.expr",
  "new.expr",
  "punctuation.accessor.optional",
  "punctuation.accessor",
  "punctuation.decorator.internaldeclaration",
  "punctuation.decorator",
  "punctuation.definition.binding-pattern.array",
  "punctuation.definition.binding-pattern.object",
  "punctuation.definition.block.tag.jsdoc",
  "punctuation.definition.block",
  "punctuation.definition.bracket.angle.begin.jsdoc",
  "punctuation.definition.bracket.angle.end.jsdoc",
  "punctuation.definition.bracket.curly.begin.jsdoc",
  "punctuation.definition.bracket.curly.end.jsdoc",
  "punctuation.definition.bracket.square.begin.jsdoc",
  "punctuation.definition.bracket.square.end.jsdoc",
  "punctuation.definition.character-class.regexp",
  "punctuation.definition.comment",
  "punctuation.definition.group.assertion.regexp",
  "punctuation.definition.group.no-capture.regexp",
  "punctuation.definition.group.regexp",
  "punctuation.definition.inline.tag.jsdoc",
  "punctuation.definition.optional-value.begin.bracket.square.jsdoc",
  "punctuation.definition.optional-value.end.bracket.square.jsdoc",
  "punctuation.definition.parameters.begin",
  "punctuation.definition.parameters.end",
  "punctuation.definition.section.case-statement",
  "punctuation.definition.string.begin.jsdoc",
  "punctuation.definition.string.begin",
  "punctuation.definition.string.end.jsdoc",
  "punctuation.definition.string.end",
  "punctuation.definition.string.template.begin",
  "punctuation.definition.string.template.end",
  "punctuation.definition.tag.directive",
  "punctuation.definition.template-expression.begin",
  "punctuation.definition.template-expression.end",
  "punctuation.definition.typeparameters.begin",
  "punctuation.definition.typeparameters.end",
  "punctuation.destructuring",
  "punctuation.separator.comma",
  "punctuation.separator.label",
  "punctuation.separator.parameter",
  "punctuation.separator.pipe.jsdoc",
  "punctuation.terminator.statement",
  "punctuation.whitespace.comment.leading",
  "source.embedded",
  "storage.modifier.async",
  "storage.modifier",
  "storage.type.class.jsdoc",
  "storage.type.class",
  "storage.type.enum",
  "storage.type.function.arrow",
  "storage.type.function",
  "storage.type.interface",
  "storage.type.internaldeclaration",
  "storage.type.namespace",
  "storage.type.numeric.bigint",
  "storage.type.property",
  "storage.type",
  "storage.type.type",
  "string.quoted.double",
  "string.quoted.single",
  "string.regexp",
  "string.template",
  "support.class.builtin",
  "support.class.console",
  "support.class.error",
  "support.class.node",
  "support.class.promise",
  "support.class",
  "support.constant.json",
  "support.constant.math",
  "support.constant.property.math",
  "support.constant",
  "support.function.console",
  "support.function.json",
  "support.function.math",
  "support.function.process",
  "support.function",
  "support.type.builtin",
  "support.type.object.module",
  "support.type.primitive",
  "support.variable.object.node",
  "support.variable.object.process",
  "support.variable.property.importmeta",
  "support.variable.property.process",
  "support.variable.property.target",
  "support.variable.property",
  "switch-block.expr",
  "switch-expression.expr",
  "switch-statement.expr",
  "TypeScript",
  "variable.language.arguments",
  "variable.language.super",
  "variable.language.this",
  "variable.object.property",
  "variable.other.constant.object.property",
  "variable.other.constant.object",
  "variable.other.constant.property",
  "variable.other.constant",
  "variable.other.description.jsdoc",
  "variable.other.enummember",
  "variable.other.jsdoc",
  "variable.other.link.underline.jsdoc",
  "variable.other.object.property",
  "variable.other.object",
  "variable.other.property",
  "variable.other.readwrite.alias",
  "variable.other.readwrite",
  "variable.other.regexp",
  "variable.parameter",
  "variable.parameter variable.language.this"
];

/*

{
      "scope": ["case-clause.expr"],
      "settings": { "foreground": "", "fontStyle": "bold" }
    },

{"scope": [
  "case-clause.expr",
  "case-clause.expr ",
  "cast.expr",
  ],
    "settings": { "foreground": "#ff5", "fontStyle": "bold" }
    },
    {"scope": [
  "comment.block.documentation",
  "comment.block",
  "comment.line.double-slash",
  "comment.line.shebang",
  "comment.line.triple-slash.directive",
  ],
    "settings": { "foreground": "#f5f", "fontStyle": "bold" }
    },
    {"scope": [
  "constant.character.control.regexp",
  "constant.character.escape.backslash.regexp",
  "constant.character.escape",
  "constant.character.numeric.regexp",
  "constant.language.access-type.jsdoc",
  "constant.language.boolean.false",
  "constant.language.boolean.true",
  "constant.language.import-export-all",
  "constant.language.infinity",
  "constant.language.nan",
  "constant.language.null",
  "constant.language.symbol-type.jsdoc",
  "constant.language.undefined",
  "constant.numeric.binary",
  "constant.numeric.decimal",
  "constant.numeric.hex",
  "constant.numeric.octal",
  "constant.other.character-class.range.regexp",
  "constant.other.character-class.regexp",
  "constant.other.character-class.set.regexp",
  "constant.other.description.jsdoc",
  "constant.other.email.link.underline.jsdoc",
  ],
    "settings": { "foreground": "#5ff", "fontStyle": "bold" }
    },
    {"scope": [
  "entity.name.function.tagged-template",
  "entity.name.function",
  "entity.name.function variable.language.this",
  "entity.name.label",
  "entity.name.tag.directive",
  "entity.name.tag.inline.jsdoc",
  "entity.name.type.alias",
  "entity.name.type.class",
  "entity.name.type.enum",
  "entity.name.type.instance.jsdoc",
  "entity.name.type.interface",
  "entity.name.type.module",
  "entity.name.type",
  "entity.other.attribute-name.directive",
  "entity.other.inherited-class",
  ],
    "settings": { "foreground": "#f55", "fontStyle": "bold" }
    },
    {"scope": [
  "invalid.illegal.newline",
  "invalid.illegal.syntax.jsdoc",
  ],
    "settings": { "foreground": "#55f", "fontStyle": "bold" }
    },
    {"scope": [
  "keyword.control.anchor.regexp",
  "keyword.control.as",
  "keyword.control.conditional",
  "keyword.control.default",
  "keyword.control.export",
  "keyword.control.flow",
  "keyword.control.from",
  "keyword.control.import",
  "keyword.control.loop",
  "keyword.control.new",
  "keyword.control.require",
  "keyword.control.switch",
  "keyword.control.trycatch",
  "keyword.control",
  "keyword.control.with",
  ],
    "settings": { "foreground": "#5f5", "fontStyle": "bold" }
    },
    {"scope": [
  "keyword.generator.asterisk",
  ],
    "settings": { "foreground": "#555", "fontStyle": "bold" }
    },
    {"scope": [
  "keyword.operator.arithmetic",
  "keyword.operator.assignment.compound.bitwise",
  "keyword.operator.assignment.compound",
  "keyword.operator.assignment.jsdoc",
  "keyword.operator.assignment",
  "keyword.operator.bitwise.shift",
  "keyword.operator.bitwise",
  "keyword.operator.comparison",
  "keyword.operator.control.jsdoc",
  "keyword.operator.decrement",
  "keyword.operator.definiteassignment",
  "keyword.operator.expression.delete",
  "keyword.operator.expression.import",
  "keyword.operator.expression.in",
  "keyword.operator.expression.infer",
  "keyword.operator.expression.instanceof",
  "keyword.operator.expression.is",
  "keyword.operator.expression.keyof",
  "keyword.operator.expression.of",
  "keyword.operator.expression.typeof",
  "keyword.operator.expression.void",
  "keyword.operator.increment",
  "keyword.operator.logical",
  "keyword.operator.negation.regexp",
  "keyword.operator.new",
  "keyword.operator.optional",
  "keyword.operator.or.regexp",
  "keyword.operator.quantifier.regexp",
  "keyword.operator.relational",
  "keyword.operator.rest",
  "keyword.operator.spread",
  "keyword.operator.ternary",
  "keyword.operator.type.annotation",
  "keyword.operator.type.modifier",
  "keyword.operator.type",
  ],
    "settings": { "foreground": "#f05", "fontStyle": "bold" }
    },
    {"scope": [
  "keyword.other.back-reference.regexp",
  "keyword.other.debugger",
  "keyword.other",
  ],
    "settings": { "foreground": "#05f", "fontStyle": "bold" }
    },
    {"scope": [
  "meta.array-binding-pattern-variable",
  "meta.array.literal",
  "meta.arrow",
  "meta.arrow meta.return.type.arrow keyword.operator.type.annotation",
  "meta.assertion.look-ahead.regexp",
  "meta.assertion.look-behind.regexp",
  "meta.assertion.negative-look-ahead.regexp",
  "meta.assertion.negative-look-behind.regexp",
  "meta.block",
  "meta.block punctuation.definition.block",
  "meta.brace.angle",
  "meta.brace.round",
  "meta.brace.square",
  "meta.class",
  "meta.decorator",
  "meta.definition.function entity.name.function",
  "meta.definition.method entity.name.function",
  "meta.definition.property entity.name.function",
  "meta.definition.property variable.object.property",
  "meta.definition.variable entity.name.function",
  "meta.definition.variable variable.other.constant",
  "meta.definition.variable variable.other.constant entity.name.function",
  "meta.definition.variable variable.other.readwrite",
  "meta.delimiter.decimal.period",
  "meta.enum.declaration",
  "meta.example.jsdoc",
  "meta.export.default",
  "meta.export",
  "meta.field.declaration",
  "meta.function-call",
  "meta.function-call punctuation.accessor.optional",
  "meta.function.expression",
  "meta.function",
  "meta.group.assertion.regexp",
  "meta.group.regexp",
  "meta.import-equals.external",
  "meta.import-equals.internal",
  "meta.import",
  "meta.indexer.declaration",
  "meta.indexer.mappedtype.declaration",
  "meta.interface",
  "meta.method.declaration",
  "meta.namespace.declaration",
  "meta.object-binding-pattern-variable",
  "meta.object-literal.key",
  "meta.object-literal.key punctuation.separator.key-value",
  "meta.object.member",
  "meta.object.member meta.object-literal.key",
  "meta.object.type",
  "meta.objectliteral",
  "meta.parameter.object-binding-pattern",
  "meta.parameters",
  "meta.paramter.array-binding-pattern",
  "meta.return.type.arrow",
  "meta.return.type",
  "meta.tag",
  "meta.template.expression",
  "meta.type.annotation",
  "meta.type.constructor",
  "meta.type.constructor keyword.control.new",
  "meta.type.declaration",
  "meta.type.function.return",
  "meta.type.function",
  "meta.type.parameters",
  "meta.type.parameters punctuation.definition.typeparameters.begin",
  "meta.type.parameters punctuation.definition.typeparameters.end",
  "meta.type.paren.cover",
  "meta.type.tuple",
  "meta.var-single-variable.expr",
  "meta.var.expr",
  ],
    "settings": { "foreground": "#5f0", "fontStyle": "bold" }
    },
    {"scope": [
  "new.expr",
  ],
    "settings": { "foreground": "#500", "fontStyle": "bold" }
    },
    {"scope": [
  "punctuation.accessor.optional",
  "punctuation.accessor",
  "punctuation.decorator.internaldeclaration",
  "punctuation.decorator",
  "punctuation.definition.binding-pattern.array",
  "punctuation.definition.binding-pattern.object",
  "punctuation.definition.block.tag.jsdoc",
  "punctuation.definition.block",
  "punctuation.definition.bracket.angle.begin.jsdoc",
  "punctuation.definition.bracket.angle.end.jsdoc",
  "punctuation.definition.bracket.curly.begin.jsdoc",
  "punctuation.definition.bracket.curly.end.jsdoc",
  "punctuation.definition.bracket.square.begin.jsdoc",
  "punctuation.definition.bracket.square.end.jsdoc",
  "punctuation.definition.character-class.regexp",
  "punctuation.definition.comment",
  "punctuation.definition.group.assertion.regexp",
  "punctuation.definition.group.no-capture.regexp",
  "punctuation.definition.group.regexp",
  "punctuation.definition.inline.tag.jsdoc",
  "punctuation.definition.optional-value.begin.bracket.square.jsdoc",
  "punctuation.definition.optional-value.end.bracket.square.jsdoc",
  "punctuation.definition.parameters.begin",
  "punctuation.definition.parameters.end",
  "punctuation.definition.section.case-statement",
  "punctuation.definition.string.begin.jsdoc",
  "punctuation.definition.string.begin",
  "punctuation.definition.string.end.jsdoc",
  "punctuation.definition.string.end",
  "punctuation.definition.string.template.begin",
  "punctuation.definition.string.template.end",
  "punctuation.definition.tag.directive",
  "punctuation.definition.template-expression.begin",
  "punctuation.definition.template-expression.end",
  "punctuation.definition.typeparameters.begin",
  "punctuation.definition.typeparameters.end",
  "punctuation.destructuring",
  "punctuation.separator.comma",
  "punctuation.separator.label",
  "punctuation.separator.parameter",
  "punctuation.separator.pipe.jsdoc",
  "punctuation.terminator.statement",
  "punctuation.whitespace.comment.leading",
  ],
    "settings": { "foreground": "#005", "fontStyle": "bold" }
    },
    {"scope": [
  "source.embedded",
  ],
    "settings": { "foreground": "#550", "fontStyle": "bold" }
    },
    {"scope": [
  "storage.modifier.async",
  "storage.modifier",
  "storage.type.class.jsdoc",
  "storage.type.class",
  "storage.type.enum",
  "storage.type.function.arrow",
  "storage.type.function",
  "storage.type.interface",
  "storage.type.internaldeclaration",
  "storage.type.namespace",
  "storage.type.numeric.bigint",
  "storage.type.property",
  "storage.type",
  "storage.type.type",
  ],
    "settings": { "foreground": "#505", "fontStyle": "bold" }
    },
    {"scope": [
  "string.quoted.double",
  "string.quoted.single",
  "string.regexp",
  "string.template",
  ],
    "settings": { "foreground": "#055", "fontStyle": "bold" }
    },
    {"scope": [
  "support.class.builtin",
  "support.class.console",
  "support.class.error",
  "support.class.node",
  "support.class.promise",
  "support.class",
  ],
    "settings": { "foreground": "#bcd", "fontStyle": "bold" }
    },
    {"scope": [
  "support.constant.json",
  "support.constant.math",
  "support.constant.property.math",
  "support.constant",
  ],
    "settings": { "foreground": "#cdb", "fontStyle": "bold" }
    },
    {"scope": [
  "support.function.console",
  "support.function.json",
  "support.function.math",
  "support.function.process",
  "support.function",
  ],
    "settings": { "foreground": "#af0", "fontStyle": "bold" }
    },
    {"scope": [
  "support.type.builtin",
  "support.type.object.module",
  "support.type.primitive",
  ],
    "settings": { "foreground": "#dbc", "fontStyle": "bold" }
    },
    {"scope": [
  "support.variable.object.node",
  "support.variable.object.process",
  "support.variable.property.importmeta",
  "support.variable.property.process",
  "support.variable.property.target",
  "support.variable.property",
  ],
    "settings": { "foreground": "#d3e", "fontStyle": "bold" }
    },
    {"scope": [
  "switch-block.expr",
  "switch-expression.expr",
  "switch-statement.expr",
  ],
    "settings": { "foreground": "#456", "fontStyle": "bold" }
    },
    {"scope": [
  "TypeScript",
  "variable.language.arguments",
  "variable.language.super",
  "variable.language.this",
  "variable.object.property",
  "variable.other.constant.object.property",
  "variable.other.constant.object",
  "variable.other.constant.property",
  "variable.other.constant",
  "variable.other.description.jsdoc",
  "variable.other.enummember",
  "variable.other.jsdoc",
  "variable.other.link.underline.jsdoc",
  "variable.other.object.property",
  "variable.other.object",
  "variable.other.property",
  "variable.other.readwrite.alias",
  "variable.other.readwrite",
  "variable.other.regexp",
  "variable.parameter",
  "variable.parameter variable.language.this"
],
  "settings": { "foreground": "#3d5", "fontStyle": "bold" }
    }


*/
