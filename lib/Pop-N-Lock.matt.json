{
  "$schema": "vscode://schemas/color-theme",
  "name": "Pop N Lock Matt by Luxcium",
  "type": "dark",
  "colors": {
    "peekViewTitle.background": "#1144BB00",
    "editor.lineHighlightBackground": "#1155EE00",
    "editor.foldBackground": "#1155EE00",
    "editorGroupHeader.border": "#19151C",
    "activityBar.background": "#19151C",
    "sideBar.background": "#19151C",
    "sideBarSectionHeader.background": "#19151C",
    "dropdown.listBackground": "#19151C",
    "peekViewEditorGutter.background": "#19151C",
    "walkThrough.embeddedEditorBackground": "#19151C",
    "minimap.background": "#19151C",
    "breadcrumb.background": "#19151C",
    "tab.activeBackground": "#19151C",
    "tab.unfocusedActiveBackground": "#19151C",
    "tab.inactiveBackground": "#19151C",
    "tab.unfocusedInactiveBackground": "#19151C",
    "notifications.background": "#19151C",
    "editorHoverWidget.statusBarBackground": "#19151C",
    "statusBarItem.hoverBackground": "#19151C",
    "statusBarItem.prominentHoverBackground": "#19151C",
    "statusBarItem.activeBackground": "#19151C",
    "titleBar.activeBackground": "#19151C",
    "titleBar.inactiveBackground": "#19151C",
    "debugToolBar.background": "#19151C",
    "editor.background": "#19151C",
    "editorGroup.dropBackground": "#19151C",
    "editorGroup.emptyBackground": "#19151C",
    "editorGroupHeader.noTabsBackground": "#19151C",
    "editorGroupHeader.tabsBackground": "#19151C",
    "editorGutter.background": "#19151C",
    "editorPane.background": "#19151C",
    "menu.background": "#19151C",
    "menu.separatorBackground": "#19151C",
    "notificationCenterHeader.background": "#19151C",
    "panel.background": "#19151C",
    "panel.dropBackground": "#19151C",
    "dropdown.background": "#19151C",
    "statusBar.background": "#19151C",
    "textBlockQuote.background": "#19151C",
    "textCodeBlock.background": "#19151C",
    "welcomePage.background": "#19151C",
    "terminal.background": "#19151C",
    "terminalCursor.background": "#19151C",
    "activityBar.activeFocusBorder": "#33CC3300",
    "activityBar.activeBorder": "#77116600",
    "activityBar.border": "#FFCC6600",
    "sideBarSectionHeader.border": "#FFBBAA00",
    "sideBar.border": "#FFCC3300",
    "list.filterMatchBorder": "#FFCC3300",
    "settings.dropdownListBorder": "#FFCC6600",
    "window.inactiveBorder": "#1B1B26DD",
    "tab.border": "#1C1C2EDD",
    "editorGroup.focusedEmptyBorder": "#1C1C2EDD",
    "titleBar.border": "#1C1C2EDD",
    "editorGroupHeader.tabsBorder": "#1D254500",
    "tab.activeBorder": "#1D254500",
    "tab.unfocusedActiveBorder": "#1D254500",
    "editor.snippetFinalTabstopHighlightBorder": "#22335500",
    "editor.snippetTabstopHighlightBorder": "#22335500",
    "editor.findMatchBorder": "#3333FF00",
    "tab.hoverBorder": "#3399CC00",
    "tab.unfocusedHoverBorder": "#3399CC00",
    "editor.findMatchHighlightBorder": "#3399CC00",
    "panelTitle.activeBorder": "#3399CC00",
    "editorOverviewRuler.border": "#3399CC00",
    "editorWidget.resizeBorder": "#3399CC00",
    "merge.border": "#3399CC00",
    "editorInfo.border": "#44AAEE00",
    "editor.findRangeHighlightBorder": "#5522AA00",
    "editor.selectionHighlightBorder": "#5522AA00",
    "menu.selectionBorder": "#5522AA00",
    "debugToolBar.border": "#5522AA00",
    "peekViewEditor.matchHighlightBorder": "#66118800",
    "menubar.selectionBorder": "#66118800",
    "editorSuggestWidget.border": "#66BBFF00",
    "diffEditor.border": "#77116600",
    "diffEditor.insertedTextBorder": "#77116600",
    "diffEditor.removedTextBorder": "#77116600",
    "notifications.border": "#77116600",
    "editor.rangeHighlightBorder": "#77116600",
    "focusBorder": "#77116600",
    "window.activeBorder": "#000000DD",
    "menu.border": "#77116600",
    "notificationCenter.border": "#77116600",
    "notificationToast.border": "#77116600",
    "panelInput.border": "#77116600",
    "pickerGroup.border": "#77116600",
    "dropdown.border": "#77116600",
    "statusBar.border": "#77116600",
    "statusBar.debuggingBorder": "#77116600",
    "statusBar.noFolderBorder": "#77116600",
    "textBlockQuote.border": "#77116600",
    "editor.wordHighlightBorder": "#88DDAA00",
    "editorUnnecessaryCode.border": "#9955BB00",
    "tab.unfocusedActiveBorderTop": "#AAEE4400",
    "editorBracketMatch.border": "#AAEE4400",
    "inputValidation.errorBorder": "#BB335500",
    "searchEditor.findMatchBorder": "#CC33CC00",
    "tab.activeBorderTop": "#CCFF3300",
    "editorHoverWidget.border": "#DDCCBB00",
    "contrastBorder": "#DDCCBB00",
    "debugExceptionWidget.border": "#DDCCBB00",
    "editorWidget.border": "#DDCCBB00",
    "panel.border": "#DDCCBB00",
    "editor.lineHighlightBorder": "#EE111100",
    "editor.wordHighlightStrongBorder": "#EE447700",
    "editorWarning.border": "#EEAA2200",
    "inputOption.activeBorder": "#EEAA2200",
    "input.border": "#EEAA2200",
    "editorError.border": "#FF115500",
    "contrastActiveBorder": "#FF115500",
    "tab.activeModifiedBorder": "#FF336600",
    "editor.symbolHighlightBorder": "#FF442200",
    "tab.unfocusedActiveModifiedBorder": "#FF445500",
    "tab.inactiveModifiedBorder": "#FF445500",
    "tab.unfocusedInactiveModifiedBorder": "#FF445500",
    "peekView.border": "#FFCC5500",
    "inputValidation.infoBorder": "#FFCC5500",
    "inputValidation.warningBorder": "#FFCC5500",
    "editorHint.border": "#FFCC6600",
    "editorGroup.border": "#FFCC6600",
    "settings.dropdownBorder": "#FFCC6600",
    "settings.checkboxBorder": "#FFCC6600",
    "settings.numberInputBorder": "#FFCC6600",
    "settings.textInputBorder": "#FFCC6600",
    "activityBarBadge.background": "#3399CCBB",
    "list.focusBackground": "#2222EE66",
    "list.inactiveFocusBackground": "#2222EE66",
    "activityBar.activeBackground": "#771166AA",
    "activityBar.dropBackground": "#77116666",
    "badge.background": "#3399CCBB",
    "breadcrumbPicker.background": "#2A255ACC",
    "button.background": "#771166BB",
    "button.hoverBackground": "#3399CCBB",
    "debugExceptionWidget.background": "#1D2555DD",
    "diffEditor.insertedTextBackground": "#88DDAA44",
    "diffEditor.removedTextBackground": "#EE447744",
    "editor.findMatchBackground": "#3399CC66",
    "editor.findMatchHighlightBackground": "#3399CC44",
    "editor.findRangeHighlightBackground": "#22335566",
    "editor.focusedStackFrameHighlightBackground": "#22335566",
    "editor.hoverHighlightBackground": "#3399CC44",
    "editor.inactiveSelectionBackground": "#3388DD66",
    "editor.rangeHighlightBackground": "#22335566",
    "editor.selectionBackground": "#4422EE66",
    "editor.selectionHighlightBackground": "#55227766",
    "editor.snippetFinalTabstopHighlightBackground": "#22335588",
    "editor.snippetTabstopHighlightBackground": "#22335566",
    "editor.stackFrameHighlightBackground": "#22335566",
    "editor.symbolHighlightBackground": "#4422EE66",
    "editor.wordHighlightBackground": "#88DDAA44",
    "editor.wordHighlightStrongBackground": "#EE447744",
    "editorBracketMatch.background": "#AAEE4444",
    "editorCursor.background": "#22991166",
    "editorGutter.addedBackground": "#88BB33DD",
    "editorGutter.deletedBackground": "#BB3355DD",
    "editorGutter.modifiedBackground": "#3399CCDD",
    "editorHoverWidget.background": "#1D2555DD",
    "editorIndentGuide.activeBackground": "#44AAEE44",
    "editorIndentGuide.background": "#44AAEE33",
    "editorMarkerNavigation.background": "#223355DD",
    "editorMarkerNavigationError.background": "#BB3355AA",
    "editorMarkerNavigationInfo.background": "#FFCC55CC",
    "editorMarkerNavigationWarning.background": "#D8CDB4AA",
    "editorSuggestWidget.background": "#223355CC",
    "editorSuggestWidget.selectedBackground": "#44AAEE44",
    "editorWidget.background": "#1D2555DD",
    "extensionBadge.remoteBackground": "#771166BB",
    "extensionButton.prominentBackground": "#3399CCDD",
    "extensionButton.prominentHoverBackground": "#771166BB",
    "input.background": "#3399CC44",
    "inputOption.activeBackground": "#77116688",
    "inputValidation.errorBackground": "#77222244",
    "inputValidation.infoBackground": "#22335544",
    "inputValidation.warningBackground": "#77552244",
    "list.activeSelectionBackground": "#3399CC66",
    "list.dropBackground": "#3399CC44",
    "list.filterMatchBackground": "#3399CCAA",
    "list.hoverBackground": "#77116666",
    "list.inactiveSelectionBackground": "#3333DD66",
    "listFilterWidget.background": "#442266CC",
    "listFilterWidget.noMatchesOutline": "#442266CC",
    "listFilterWidget.outline": "#442266CC",
    "menu.selectionBackground": "#EEBB5566",
    "menubar.selectionBackground": "#22995566",
    "merge.commonContentBackground": "#88DDAA44",
    "merge.commonHeaderBackground": "#88DDAAAA",
    "merge.currentContentBackground": "#3399CC44",
    "merge.currentHeaderBackground": "#3399CCAA",
    "merge.incomingContentBackground": "#EE447744",
    "merge.incomingHeaderBackground": "#EE4477AA",
    "minimap.errorHighlight": "#FF3366DD",
    "minimap.findMatchHighlight": "#FF773388",
    "minimap.selectionHighlight": "#88DDAA88",
    "minimap.warningHighlight": "#CCFF33DD",
    "minimapGutter.addedBackground": "#88BB33BB",
    "minimapGutter.deletedBackground": "#BB3355BB",
    "minimapGutter.modifiedBackground": "#3399CCBB",
    "minimapSlider.activeBackground": "#3399CCBB",
    "minimapSlider.background": "#5522AA44",
    "minimapSlider.hoverBackground": "#5522AA88",
    "peekViewEditor.background": "#223355AA",
    "peekViewEditor.matchHighlightBackground": "#552266DD",
    "peekViewResult.background": "#5522AA33",
    "peekViewResult.matchHighlightBackground": "#3399CC66",
    "peekViewResult.selectionBackground": "#4422BB44",
    "progressBar.background": "#3399CCBB",
    "scrollbar.shadow": "#11112200",
    "scrollbarSlider.activeBackground": "#88BB33AA",
    "scrollbarSlider.background": "#3399CC66",
    "scrollbarSlider.hoverBackground": "#FFCC66AA",
    "searchEditor.findMatchBackground": "#99336666",
    "selection.background": "#669988AA",
    "settings.checkboxBackground": "#3399CC44",
    "settings.dropdownBackground": "#77116644",
    "settings.modifiedItemIndicator": "#88BB33DD",
    "settings.numberInputBackground": "#3399CC44",
    "settings.textInputBackground": "#77116644",
    "sideBar.dropBackground": "#77449944",
    "statusBar.debuggingBackground": "#CC6600DD",
    "statusBar.noFolderBackground": "#884488DD",
    "statusBarItem.prominentBackground": "#669944DD",
    "tab.hoverBackground": "#5522AA66",
    "tab.unfocusedHoverBackground": "#5522AA44",
    "welcomePage.buttonBackground": "#771166BB",
    "welcomePage.buttonHoverBackground": "#3399CCBB",
    "widget.shadow": "#11112200",
    "editorUnnecessaryCode.opacity": "#FFFFFF66",
    // #B4BDC5EE
    "activityBar.foreground": "#B4BDC5DD",
    "activityBar.inactiveForeground": "#B4BDC5AA",
    "foreground": "#B4BDC5CC",
    "sideBar.foreground": "#B4BDC5CC",
    "sideBarSectionHeader.foreground": "#B4BDC5CC",
    "sideBarTitle.foreground": "#B4BDC5CC",
    "statusBar.debuggingForeground": "#B4BDC5CC",
    "statusBar.foreground": "#B4BDC5AA",
    "statusBar.noFolderForeground": "#B4BDC5CC",
    "statusBarItem.prominentForeground": "#B4BDC5CC",
    "tab.activeForeground": "#B4BDC5CC",
    "tab.hoverForeground": "#B4BDC5DD",
    "tab.inactiveForeground": "#B4BDC5AA",
    "tab.unfocusedActiveForeground": "#B4BDC5CC",
    "tab.unfocusedHoverForeground": "#B4BDC5DD",
    "tab.unfocusedInactiveForeground": "#B4BDC5AA",
    "textPreformat.foreground": "#B4BDC5CC",
    "textSeparator.foreground": "#B4BDC5CC",
    "titleBar.activeForeground": "#B4BDC5CC",
    "titleBar.inactiveForeground": "#B4BDC5AA",
    "breadcrumb.activeSelectionForeground": "#B4BDC5DD",
    "breadcrumb.focusForeground": "#B4BDC5CC",
    "breadcrumb.foreground": "#B4BDC5AA",
    "button.foreground": "#B4BDC5DD",
    "descriptionForeground": "#B4BDC5DD",
    "dropdown.foreground": "#B4BDC5CC",
    "editor.foreground": "#B4BDC5CC",
    "editor.selectionForeground": "#B4BDC5DD",
    "editorCodeLens.foreground": "#B4BDC544",
    "editorHoverWidget.foreground": "#B4BDC5DD",
    "editorInfo.foreground": "#B4BDC5DD",
    "editorLineNumber.activeForeground": "#B4BDC5CC",
    "editorLineNumber.foreground": "#B4BDC566",
    "editorLink.activeForeground": "#B4BDC5CC",
    "editorSuggestWidget.foreground": "#B4BDC5AA",
    "editorWhitespace.foreground": "#B4BDC533",
    "editorWidget.foreground": "#B4BDC5DD",
    "errorForeground": "#B4BDC5AA",
    "extensionBadge.remoteForeground": "#B4BDC5DD",
    "extensionButton.prominentForeground": "#B4BDC5DD",
    "input.foreground": "#B4BDC5CC",
    "input.placeholderForeground": "#B4BDC588",
    "inputValidation.errorForeground": "#B4BDC5DD",
    "inputValidation.infoForeground": "#B4BDC5DD",
    "inputValidation.warningForeground": "#B4BDC5DD",
    "list.activeSelectionForeground": "#B4BDC5DD",
    "list.focusForeground": "#B4BDC5DD",
    "list.hoverForeground": "#B4BDC5CC",
    "list.inactiveSelectionForeground": "#B4BDC5CC",
    "menu.foreground": "#B4BDC5CC",
    "menu.selectionForeground": "#B4BDC5DD",
    "menubar.selectionForeground": "#B4BDC5DD",
    "notificationCenterHeader.foreground": "#B4BDC5CC",
    "notifications.foreground": "#B4BDC5DD",
    "panelTitle.activeForeground": "#B4BDC5CC",
    "panelTitle.inactiveForeground": "#B4BDC5AA",
    "peekViewResult.fileForeground": "#B4BDC5AA",
    "peekViewResult.lineForeground": "#B4BDC5AA",
    "peekViewResult.selectionForeground": "#B4BDC5AA",
    "peekViewTitleDescription.foreground": "#B4BDC5AA",
    "peekViewTitleLabel.foreground": "#B4BDC5AA",
    "pickerGroup.foreground": "#B4BDC5AA",
    "quickInput.foreground": "#B4BDC5",
    "settings.checkboxForeground": "#B4BDC5CC",
    "settings.dropdownForeground": "#B4BDC5CC",
    "settings.headerForeground": "#B4BDC5DD",
    "settings.numberInputForeground": "#B4BDC5CC",
    "settings.textInputForeground": "#B4BDC5CC",
    "activityBarBadge.foreground": "#FFCC66BB",
    "gitDecoration.conflictingResourceForeground": "#FF3333DD",
    "gitDecoration.deletedResourceForeground": "#993366DD",
    "gitDecoration.ignoredResourceForeground": "#3399CCDD",
    "gitDecoration.modifiedResourceForeground": "#FFCC33DD",
    "gitDecoration.submoduleResourceForeground": "#CC33CCDD",
    "gitDecoration.untrackedResourceForeground": "#FF9933DD",
    "textLink.activeForeground": "#6644CCCC",
    "textLink.foreground": "#6699FFCC",
    "badge.foreground": "#FFCC66BB",
    "editorCursor.foreground": "#FF3333DD",
    "editorError.foreground": "#FF3366DD",
    "editorGutter.commentRangeForeground": "#5533EEAA",
    "editorGutter.foldingControlForeground": "#FFCC99CC",
    "editorHint.foreground": "#FFCC55CC",
    "editorLightBulb.foreground": "#FFCC33DD",
    "editorLightBulbAutoFix.foreground": "#3399CCDD",
    "editorOverviewRuler.addedForeground": "#88BB33AA",
    "editorOverviewRuler.bracketMatchForeground": "#AAEE44DD",
    "editorOverviewRuler.commonContentForeground": "#88DDAAAA",
    "editorOverviewRuler.currentContentForeground": "#3399CCAA",
    "editorOverviewRuler.deletedForeground": "#BB3355AA",
    "editorOverviewRuler.errorForeground": "#FF3366DD",
    "editorOverviewRuler.findMatchForeground": "#3399CCDD",
    "editorOverviewRuler.incomingContentForeground": "#EE4477AA",
    "editorOverviewRuler.infoForeground": "#FFCC55CC",
    "editorOverviewRuler.modifiedForeground": "#3399CCAA",
    "editorOverviewRuler.rangeHighlightForeground": "#FF7733BB",
    "editorOverviewRuler.selectionHighlightForeground": "#FFCC55CC",
    "editorOverviewRuler.warningForeground": "#CCFF33DD",
    "editorOverviewRuler.wordHighlightForeground": "#88DDAADD",
    "editorOverviewRuler.wordHighlightStrongForeground": "#EE4477DD",
    "editorRuler.foreground": "#EE447744",
    "editorSuggestWidget.highlightForeground": "#66BBFFCC",
    "editorWarning.foreground": "#CCFF33DD",
    "gitDecoration.addedResourceForeground": "#FFCC33DD",
    "icon.foreground": "#FFCC99BB",
    "list.errorForeground": "#FF3366DD",
    "list.highlightForeground": "#77BB55DD",
    "list.invalidItemForeground": "#FF4422BB",
    "list.warningForeground": "#CCFF33DD",
    "notificationLink.foreground": "#6699FFCC",
    "notificationsErrorIcon.foreground": "#FF3366DD",
    "notificationsInfoIcon.foreground": "#FFCC55DD",
    "notificationsWarningIcon.foreground": "#CCFF33DD",
    "problemsErrorIcon.foreground": "#FF3366DD",
    "problemsInfoIcon.foreground": "#FFCC55CC",
    "problemsWarningIcon.foreground": "#CCFF33DD",
    // "list.deemphasizedForeground": "#FF0000DD",
    // "checkbox.foreground": "#FF0000DD",
    // "statusBarItem.remoteForeground": "#FF0000DD",
    // "debugIcon.breakpointCurrentStackframeForeground": , "#FF0000DD"
    // "debugIcon.breakpointDisabledForeground": "#FF0000DD",
    // "debugIcon.breakpointForeground": "#FF0000DD",
    // "debugIcon.breakpointStackframeForeground": "#FF0000DD",
    // "debugIcon.breakpointUnverifiedForeground": "#FF0000DD",
    // "debugIcon.continueForeground": "#FF0000DD",
    // "debugIcon.disconnectForeground": "#FF0000DD",
    // "debugIcon.pauseForeground": "#FF0000DD",
    // "debugIcon.restartForeground": "#FF0000DD",
    // "debugIcon.startForeground": "#FF0000DD",
    // "debugIcon.stepBackForeground": "#FF0000DD",
    // "debugIcon.stepIntoForeground": "#FF0000DD",
    // "debugIcon.stepOutForeground": "#FF0000DD",
    // "debugIcon.stepOverForeground": "#FF0000DD",
    // "debugIcon.stopForeground": "#FF0000DD",
    // "debugView.exceptionLabelForeground": "#FF0000DD",
    // "debugView.stateLabelForeground": "#FF0000DD",
    // "symbolIcon.arrayForeground": "#FF0000DD",
    // "symbolIcon.booleanForeground": "#FF0000DD",
    // "symbolIcon.classForeground": "#FF0000DD",
    // "symbolIcon.colorForeground": "#FF0000DD",
    // "symbolIcon.constantForeground": "#FF0000DD",
    // "symbolIcon.constructorForeground": "#FF0000DD",
    // "symbolIcon.enumeratorForeground": "#FF0000DD",
    // "symbolIcon.enumeratorMemberForeground": "#FF0000DD",
    // "symbolIcon.eventForeground": "#FF0000DD",
    // "symbolIcon.fieldForeground": "#FF0000DD",
    // "symbolIcon.fileForeground": "#FF0000DD",
    // "symbolIcon.folderForeground": "#FF0000DD",
    // "symbolIcon.functionForeground": "#FF0000DD",
    // "symbolIcon.interfaceForeground": "#FF0000DD",
    // "symbolIcon.keyForeground": "#FF0000DD",
    // "symbolIcon.keywordForeground": "#FF0000DD",
    // "symbolIcon.methodForeground": "#FF0000DD",
    // "symbolIcon.moduleForeground": "#FF0000DD",
    // "symbolIcon.namespaceForeground": "#FF0000DD",
    // "symbolIcon.nullForeground": "#FF0000DD",
    // "symbolIcon.numberForeground": "#FF0000DD",
    // "symbolIcon.objectForeground": "#FF0000DD",
    // "symbolIcon.operatorForeground": "#FF0000DD",
    // "symbolIcon.packageForeground": "#FF0000DD",
    // "symbolIcon.propertyForeground": "#FF0000DD",
    // "symbolIcon.referenceForeground": "#FF0000DD",
    // "symbolIcon.snippetForeground": "#FF0000DD",
    // "symbolIcon.stringForeground": "#FF0000DD",
    // "symbolIcon.structForeground": "#FF0000DD",
    // "symbolIcon.textForeground": "#FF0000DD",
    // "symbolIcon.typeParameterForeground": "#FF0000DD",
    // "symbolIcon.unitForeground": "#FF0000DD",
    // "symbolIcon.variableForeground": "#FF0000DD",
    "terminal.border": "#000000DD",
    "terminal.selectionBackground": "#33227766",
    "terminal.foreground": "#B4BDC5",
    "terminalCursor.foreground": "#FF3333",
    "terminal.ansiBlack": "#221B25",
    "terminal.ansiBlue": "#458588",
    "terminal.ansiCyan": "#689E6A",
    "terminal.ansiBrightCyan": "#8AE180",
    "terminal.ansiBrightBlack": "#928374",
    "terminal.ansiGreen": "#98971A",
    "terminal.ansiBrightBlue": "#99C6CA",
    "terminal.ansiMagenta": "#B16286",
    "terminal.ansiBrightGreen": "#B5C033",
    "terminal.ansiWhite": "#C0B0A0",
    "terminal.ansiRed": "#CC241D",
    "terminal.ansiBrightMagenta": "#D66282",
    "terminal.ansiBrightWhite": "#DDCCAA",
    "terminal.ansiYellow": "#E7A931",
    "terminal.ansiBrightRed": "#F42C3E",
    "terminal.ansiBrightYellow": "#FABE2F"
    /*

  #B4BDC5EE
  "activityBar.foreground": "#C9BDB0FF",
  "activityBar.inactiveForeground": "#C9BDB0AA",
  "foreground": "#DDCCBBDD",
  "sideBar.foreground": "#DDCCBBDD",
  "sideBarSectionHeader.foreground": "#DDCCBBDD",
  "sideBarTitle.foreground": "#DDCCBBDD",
  "statusBar.debuggingForeground": "#DDCCBBDD",
  "statusBar.foreground": "#DDCCBBAA",
  "statusBar.noFolderForeground": "#DDCCBBDD",
  "statusBarItem.prominentForeground": "#DDCCBBDD",
  "tab.activeForeground": "#DDCCBBDD",
  "tab.hoverForeground": "#DDCCBBFF",
  "tab.inactiveForeground": "#DDCCBBAA",
  "tab.unfocusedActiveForeground": "#DDCCBBDD",
  "tab.unfocusedHoverForeground": "#DDCCBBFF",
  "tab.unfocusedInactiveForeground": "#DDCCBBAA",
  "terminal.foreground": "#C9BDB0FF",
  "textPreformat.foreground": "#DDCCBBDD",
  "textSeparator.foreground": "#DDCCBBDD",
  "titleBar.activeForeground": "#DDCCBBDD",
  "titleBar.inactiveForeground": "#DDCCBBAA",
  "breadcrumb.activeSelectionForeground": "#C9BDB0EE",
  "breadcrumb.focusForeground": "#DDCCBBDD",
  "breadcrumb.foreground": "#DDCCBBAA",
  "button.foreground": "#C9BDB0FF",
  "descriptionForeground": "#C9BDB0FF",
  "dropdown.foreground": "#DDCCBBDD",
  "editor.foreground": "#DDCCBBDD",
  "editor.selectionForeground": "#C9BDB0EE",
  "editorCodeLens.foreground": "#DDCCBB33",
  "editorHoverWidget.foreground": "#C9BDB0EE",
  "editorInfo.foreground": "#C9BDB0EE",
  "editorLineNumber.activeForeground": "#DDCCBBDD",
  "editorLineNumber.foreground": "#DDCCBB55",
  "editorLink.activeForeground": "#DDCCBBDD",
  "editorSuggestWidget.foreground": "#EEDDAABB",
  "editorWhitespace.foreground": "#DDCCBB22",
  "editorWidget.foreground": "#C9BDB0EE",
  "errorForeground": "#DDCCBBBB",
  "extensionBadge.remoteForeground": "#C9BDB0FF",
  "extensionButton.prominentForeground": "#FFEECCEE",
  "input.foreground": "#FFEEDDDD",
  "input.placeholderForeground": "#FFEEDD88",
  "inputValidation.errorForeground": "#C9BDB0EE",
  "inputValidation.infoForeground": "#C9BDB0EE",
  "inputValidation.warningForeground": "#C9BDB0EE",
  "list.activeSelectionForeground": "#C9BDB0EE",
  "list.focusForeground": "#FFFFFFFF",
  "list.hoverForeground": "#DDCCBBDD",
  "list.inactiveSelectionForeground": "#DDCCBBDD",
  "menu.foreground": "#DDCCBBDD",
  "menu.selectionForeground": "#C9BDB0EE",
  "menubar.selectionForeground": "#C9BDB0EE",
  "notificationCenterHeader.foreground": "#DDCCBBDD",
  "notifications.foreground": "#C9BDB0EE",
  "panelTitle.activeForeground": "#DDCCBBDD",
  "panelTitle.inactiveForeground": "#DDCCBBAA",
  "peekViewResult.fileForeground": "#EEDDAABB",
  "peekViewResult.lineForeground": "#EEDDAABB",
  "peekViewResult.selectionForeground": "#EEDDAABB",
  "peekViewTitleDescription.foreground": "#EEDDAABB",
  "peekViewTitleLabel.foreground": "#EEDDAABB",
  "pickerGroup.foreground": "#DDCCBBBB",
  "quickInput.foreground": "#C9BDB000",
  "settings.checkboxForeground": "#DDCCBBDD",
  "settings.dropdownForeground": "#DDCCBBDD",
  "settings.headerForeground": "#EEDDCCFF",
  "settings.numberInputForeground": "#DDCCBBDD",
  "settings.textInputForeground": "#DDCCBBDD", */
  },
  "tokenColors": [
    // "TypeScript main Tokens colors" -----------------------------------------
    // "#DD2255AA","#EE4433CC","#EE6677CC","#EE11AACC","#77AADDCC",
    // "#FFCC55CC","#FF9911CC","#EEDDAAAA","#AA55BBCC","#AADDCCBB",
    // "#CCEE55BB","#77CC22CC","#44BB99CC","#5555FFCC","#66BBFFBB",
    // #region "TypeScript" ----------------------------------------------------
    // #region TS INTERFACE START HERE
    {
      "name": "Interface and Type Aliase definition keyword",
      "scope": [
        "source.ts storage.type.enum",
        "source.ts storage.type.interface",
        "source.ts storage.type.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Interface and Type Aliase definition name",
      "scope": [
        "source.ts meta.interface entity.name.type.interface",
        "entity.name.type.alias"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Property Definition in Interface",
      "scope": [
        "source.ts meta.interface meta.definition.property variable.object.property"
      ],
      "settings": {
        "foreground": "#AADDCCBB",
        "fontStyle": ""
      }
    },
    {
      "name": "Primitive Annotation in Interface and Type Aliase",
      "scope": [
        "source.ts meta.interface meta.type.annotation support.type.primitive",
        "source.ts meta.type.declaration support.type.primitive"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",
        "fontStyle": ""
      }
    },
    {
      "name": "Entity Name Type Annotation in Interface and Type Aliases",
      "scope": [
        "source.ts meta.interface meta.type.annotation entity.name.type",
        "source.ts meta.type.declaration entity.name.type",
        "source.ts meta.type.declaration meta.type.function.return meta.type.parameters entity.name.type",
        "source.ts meta.function meta.block meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",
        "fontStyle": ""
      }
    },
    // #endregion TS INTERFACE END HERE
    {
      "name": "Types",
      "scope": [
        "source.ts meta.type.declaration meta.type.parameters entity.name.type",
        "source.ts meta.function meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Types",
      "scope": [
        "source.ts entity.name.type",
        "source.ts meta.parameters entity.name.type",
        "source.ts meta.type.annotation meta.type.parameters entity.name.type",
        "source.ts meta.type.annotation",
        "source.ts meta.type.parameters entity.name.type",
        "source.ts type.annotation"
      ],
      "settings": {
        "foreground": "#FFCC55CC",
        "fontStyle": ""
      }
    },
    {
      "name": "Types primitives",
      "scope": [
        "source.ts meta.type.annotation meta.type.parameters support.type.primitive",
        "source.ts support.type.primitive"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",  "#FFCC55CC",
        "fontStyle": ""
      }
    },
    {
      "name": "Functions",
      "scope": [
        "source.ts entity.name.function",
        "source.ts meta.definition.function.ts entity.name.function",
        "source.ts meta.definition.method",
        "source.ts meta.definition.variable entity.name.function",
        "source.ts meta.field.declaration.ts"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/,
        "fontStyle": ""
      }
    },
    {
      "name": "Function Math or builtin",
      "scope": [
        "source.ts support.function.builtin",
        // "source.ts support.function.git-rebase",
        // "source.ts support.function",
        "source.ts support.function.math"
        // "source.ts support.function.process"
        // "source.ts support.function.console"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Function Like",
      "scope": [
        // "source.ts support.function.builtin",
        "source.ts support.function.git-rebase",
        "source.ts support.function",
        // "source.ts support.function.math",
        "source.ts support.function.process",
        "source.ts support.function.dom"
        // "source.ts support.function.console"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "New Class",
      "scope": [
        "source.ts entity.other.inherited-class",
        "source.ts new.expr entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Function Return Type",
      "scope": [
        "source.ts meta.return.type entity.name.type",
        "source.ts meta.return.type support.type.primitive"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Function Return Type parameter name type",
      "scope": [
        "source.ts meta.return.type meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55CC",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Function Return Type parameter primitive type",
      "scope": [
        "source.ts meta.return.type meta.type.parameters support.type.primitive"
      ],
      "settings": {
        "foreground": "#EE77BBAA", // "#FFCC55CC",  "#EE77BBAA",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Function Return Type parameter punctuation",
      "scope": [
        "source.ts meta.return.type meta.type.parameters punctuation.definition.typeparameters",
        "source.ts meta.return.type meta.type.tuple meta.brace.square",
        "source.ts meta.return.type keyword.operator.type"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "name": "Types",
      "scope": [
        "source.ts entity.name.type.class",
        "source.ts entity.name.type.enum",
        "source.ts entity.name.type.instance",
        "source.ts entity.name.type.module"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Entitys",
      "scope": [
        "source.ts punctuation.definition.template-expression.begin",
        "source.ts punctuation.definition.template-expression.end",
        "source.ts punctuation.definition.parameters.begin",
        "source.ts punctuation.definition.parameters.end",
        "source.ts meta.brace.angle",
        "source.ts meta.brace.round",
        "source.ts meta.brace.square",
        "source.ts punctuation.definition.block",
        "source.ts entity.function",
        "source.ts entity.name",
        "source.ts entity.other.attribute-name.css",
        "source.ts entity.other.attribute-name.directive",
        "source.ts entity.other.attribute-name",
        "source.ts entity.other.inherited-class",
        "source.ts entity.static"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "name": "Entitys",
      "scope": [
        "source.ts meta.decorator entity.name",
        "source.ts meta.decorator entity.name.function",
        "source.ts meta.decorator meta.function-call entity.name",
        "source.ts meta.decorator variable.other.readwrite"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "regexp constants",
      "scope": [
        "source.ts string.regexp constant.other.character-class.set.regexp"
      ],
      "settings": {
        "foreground": "#E67D" /*#E67E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "regexp string",
      "scope": [
        "source.ts meta.var.expr string.regexp"
      ],
      "settings": {
        "foreground": "#9C8D" /*#9C8D*/,
        "fontStyle": ""
      }
    },
    {
      "name": "regexp other punctuation",
      "scope": [
        "source.ts string.regexp punctuation.definition.character-class.regexp"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/,
        "fontStyle": ""
      }
    },
    // console.log etc ...
    {
      "name": "console function",
      "scope": [
        "source support.function.console"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "console class",
      "scope": [
        "source support.class.console"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "regexp punctuation",
      "scope": [
        "source support.function.promise"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "regexp punctuation",
      "scope": [
        "source.ts string.regexp punctuation.definition.string.begin",
        "source.ts string.regexp punctuation.definition.string.end"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Variables",
      "scope": [
        "source.ts variable.other.enummember",
        "source.ts variable.arguments",
        "source.ts variable.class",
        "source.ts variable.language.arguments",
        "source.ts variable.language",
        "source.ts variable.name",
        "source.ts variable.other.constant.object",
        "source.ts variable.other.constant",
        "source.ts variable.other.readwrite.alias",
        "source.ts meta.array-binding-pattern-variable variable.other.constant",
        "source.ts variable.other.readwrite",
        "source.ts variable.other.readwrite",
        "source.ts variable.other.regexp",
        "source.ts variable.other",
        "source.ts variable.parameter",
        "source.ts variable",
        "source.ts meta.array-binding-pattern-variable variable.other.constant",
        "source.ts meta.object-binding-pattern-variable variable.other.constant",
        "meta.body.struct",
        "source meta.body"
      ],
      "settings": {
        "foreground": "#ADCC"
      }
    },
    {
      "name": "Other Constant",
      "scope": [
        "source.ts meta.object-binding-pattern-variable variable.other.constant",
        "source.ts meta.object.member meta.object-literal.key",
        "source.ts meta.objectliteral meta.object.member",
        "source.ts meta.var.expr meta.object-literal.key",
        "source.ts variable.object.property",
        "source.ts variable.other.constant.object.property",
        "source.ts variable.other.constant.property",
        "source.ts variable.other.property"
      ],
      "settings": {
        "foreground": "#6BFC"
      }
    },
    {
      "name": "support properties",
      "scope": [
        /*         "source.ts support.variable.property",
        "source.ts support.variable.property.importmeta",
        "source.ts support.variable.property.process",
        "source.ts support.variable.property.target",
        "source.ts support.type.property-name",
        "source.ts support.type.property-name.css",
        "source.ts support.property-value",
        "source.ts support.property-value.scss", */
        "source.ts support.constant.property.math"
      ],
      "settings": {
        "foreground": "#66BBFFBB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "support properties",
      "scope": [
        "source.ts support.variable.property",
        "source.ts support.variable.property.importmeta",
        "source.ts support.variable.property.process",
        "source.ts support.variable.property.target",
        "source.ts support.type.property-name",
        "source.ts support.type.property-name.css",
        "source.ts support.property-value",
        "source.ts support.property-value.scss"
        // "source.ts support.constant.property.math"
      ],
      "settings": {
        "foreground": "#66BBFFAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Constants",
      "scope": [
        "source.ts constant",
        "source.ts constant.character.escape.backslash.regexp",
        "source.ts constant.character.numeric.regexp",
        "source.ts constant.language",
        "source.ts constant.language.import-export-all",
        "source.ts constant.other.character-class.range.regexp",
        "source.ts constant.other.character-class.regexp",
        "source.ts constant.other.character-class.set.regexp",
        "source.ts constant.rgb-value",
        "source.ts constant.sha.git-rebase",
        "source.ts constant.character.escape",
        "source.ts constant.numeric",
        "source.ts constant.numeric.binary",
        "source.ts constant.numeric.decimal",
        "source.ts constant.numeric.hex",
        "source.ts constant.numeric.octal"
      ],
      "settings": {
        "foreground": "#E67D" /*#E67E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "Strings",
      "scope": [
        "source.ts string",
        "source.ts string.constant.other.placeholder",
        "source.ts string.entity",
        "source.ts string.escape",
        "source.ts string.quoted.double",
        "source.ts string.quoted.single",
        "source.ts string.regexp",
        "source.ts string.tag",
        "source.ts string.template",
        "source.ts string.value"
      ],
      "settings": {
        "foreground": "#CE5C"
      }
    },
    {
      "name": "ARROW FUNCTION STYLE",
      "scope": [
        "source.ts storage.type.function.arrow"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "FUNCTION KEYWORD STYLE",
      "scope": [
        "source.ts storage.type.function"
      ],
      "settings": {
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "FUNCTION KEYWORD OR ARROW COLOUR",
      "scope": [
        "source.ts storage.type.function",
        "source.ts storage.type.function.arrow"
      ],
      "settings": {
        "foreground": "#7C2C"
      }
    },
    {
      "name": "CLASS KEYWORD DEFINITION",
      "scope": [
        "source.ts storage.type.class"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Constructor Keyword",
      "scope": [
        "source.ts meta.method.declaration.ts storage.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Extends, Get, Implements, Private, Public, Set, etc...",
      "scope": [
        "source.ts meta.class storage.modifier",
        "source.ts meta.method.declaration storage.modifier",
        "source.ts storage.type.property",
        "storage.type.modifier.access.control"
      ],
      "settings": {
        "foreground": "#F91D" /*#F91E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "NEW KEYWORD DEFINITION",
      "scope": [
        "source.ts keyword.control.new",
        "source.ts keyword.operator.new"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "ASYNC KEYWORD DEFINITION",
      "scope": [
        "source.ts meta.method.declaration storage.modifier.async",
        "source.ts storage.modifier.async"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "VARIABLE SUPER",
      "scope": [
        "source.ts variable.language.super"
      ],
      "settings": {
        "foreground": "#E1AC" /*#E1AE*/,
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "VARIABLE THIS",
      "scope": [
        "source.ts variable.language.this"
      ],
      "settings": {
        "foreground": "#E67C" /*#E67E*/,
        "fontStyle": "bold italic"
      }
    },
    // import is italic
    {
      "name": "Import variables are italic",
      "scope": [
        "source.ts meta.import variable.other.readwrite.alias",
        "source.ts meta.import variable.other.readwrite"
      ],
      "settings": {
        "foreground": "#AADDCCBB",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Import variables are italic",
      "scope": [
        "source.ts meta.import punctuation.definition.block"
      ],
      "settings": {
        "foreground": "#FFDD00BB",
        "fontStyle": "bold italic"
      }
    },
    //     "source.ts constant.language.import-export-all",
    {
      "name": "Star in import expor all",
      "scope": [
        "source.ts constant.language.import-export-all"
      ],
      "settings": {
        "foreground": "#EE6677BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Import strings are italic",
      "scope": [
        "source.ts meta.import string.quoted.single",
        "source.ts meta.import string.quoted.double"
      ],
      "settings": {
        "foreground": "#CCEE55BB",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Import default as and From",
      "scope": [
        "source.ts meta.import keyword.control.as",
        "source.ts meta.import keyword.control.default",
        "source.ts meta.import keyword.control.from",
        "source.ts meta.import keyword.control.import"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Enum, Export, Import, Interface, Namespace, Type, etc",
      "scope": [
        "source.ts storage.type.internaldeclaration",
        "source.ts storage.type.namespace",
        "source.ts storage.type",
        "source.ts keyword.control.from",
        "source.ts keyword.control.import",
        "source.ts keyword.control.export",
        "source.ts meta.export.default keyword.control.default"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "KEYWORD.CONTROL others ETC.",
      "scope": [
        "source.ts keyword.control.as",
        "source.ts keyword.control.default",
        "source.ts keyword.control",
        "source.ts keyword.control.anchor.regexp",
        "source.ts keyword.control.conditional",
        "source.ts keyword.control.less",
        "source.ts keyword.control.loop",
        "source.ts keyword.control.module",
        "source.ts keyword.control.require",
        "source.ts keyword.control.switch",
        "source.ts keyword.control.trycatch",
        "source.ts keyword.control.with",
        "source.ts keyword",
        "source.ts keyword.other",
        "source.ts keyword.generator.asterisk",
        "source.ts meta.block keyword.control.flow",
        "source.ts keyword.operator.logical",
        "source.ts storage.type.numeric.bigint"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": ""
      }
    },
    {
      "name": "STORAGE TYPE => LET CONST etc ....",
      "scope": [
        "source.ts storage.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "STORAGE TYPE => LET CONST etc ....",
      "scope": [
        "source.ts meta.block meta.var.expr storage.type"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": "italic"
      }
    },
    {
      "scope": [
        "source.ts punctuation.decorator"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.ts constant.language.boolean.false"
      ],
      "settings": {
        "foreground": "#EE4433BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.ts constant.language.boolean.true"
      ],
      "settings": {
        "foreground": "#77CC22BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.ts constant.language.undefined"
      ],
      "settings": {
        "foreground": "#AA77BBAA",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.ts constant.language.null"
      ],
      "settings": {
        "foreground": "#EE6677BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.ts support.type.builtin"
      ],
      "settings": {
        "foreground": "#EE77BBAA",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.ts constant.language.infinity",
        "source.ts constant.language.nan"
      ],
      "settings": {
        "foreground": "#77AADDBB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Big Int",
      "scope": [
        "source.ts storage.type.numeric.bigint"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Operators",
      "scope": [
        "source.ts keyword.operator.arithmetic",
        "source.ts keyword.operator.assignment.compound.bitwise",
        "source.ts keyword.operator.assignment.compound",
        "source.ts keyword.operator.bitwise.shift",
        "source.ts keyword.operator.bitwise",
        "source.ts keyword.operator.decrement",
        "source.ts keyword.operator.increment",
        "source.ts keyword.operator.definiteassignment",
        "source.ts keyword.operator",
        "source.ts keyword.operator.comparison",
        "source.ts keyword.operator.ternary",
        "source.ts punctuation.separator.key-value",
        "source.ts keyword.operator.assignment",
        "source.ts keyword.operator.type.annotation",
        "source.ts keyword.operator.expression.delete",
        "source.ts keyword.operator.expression.import",
        "source.ts keyword.operator.expression.in",
        "source.ts keyword.operator.expression.infer",
        "source.ts keyword.operator.expression.instanceof",
        "source.ts keyword.operator.expression.is",
        "source.ts keyword.operator.expression.keyof",
        "source.ts keyword.operator.expression.of",
        "source.ts keyword.operator.expression.typeof",
        "source.ts keyword.operator.expression.void",
        "source.ts keyword.operator.negation.regexp",
        "source.ts keyword.operator.optional",
        "source.ts keyword.operator.or.regexp",
        "source.ts keyword.operator.quantifier.regexp",
        "source.ts keyword.operator.relational",
        "source.ts keyword.operator.type.modifier",
        "source.ts keyword.operator.type",
        "source punctuation.separator.scope-resolution",
        "source punctuation.separator.namespace.access"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.ts keyword.operator.spread",
        "source.ts keyword.operator.rest"
      ],
      "settings": {
        "foreground": "#44BB99AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Others",
      "scope": [
        "source.ts *link*",
        "source.ts *uri*",
        "source.ts *url*",
        "source.ts case-clause.expr ",
        "source.ts case-clause.expr",
        "source.ts cast.expr",
        "source.ts header",
        "source.ts keyword.other.back-reference.regexp",
        "source.ts keyword.other.unit",
        "source.ts markup.changed",
        "source.ts markup.deleted",
        "source.ts markup.heading",
        "source.ts markup.inline.raw",
        "source.ts markup.inserted",
        "source.ts markup.punctuation.list.beginning",
        "source.ts markup.punctuation.quote.beginning",
        "source.ts markup.underline",
        "source.ts module.node",
        "source.ts new.expr",
        "source.ts prototype",
        "source.ts punctuation.definition.binding-pattern.array",
        "source.ts punctuation.definition.binding-pattern.object",
        "source.ts source.embedded",
        "source.ts switch-block.expr",
        "source.ts switch-expression.expr",
        "source.ts switch-statement.expr",
        "source.ts variable.other.object",
        "source.ts meta.object.member variable.other.object"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.ts support.class",
        "source.ts support.class.builtin",
        "source.ts support.class.node",
        "source.ts support.class.promise",
        "source.ts support.constant",
        "source.ts support.constant",
        "source.ts support.constant.math",
        "source.ts support.type",
        "source.ts support.type.object.module",
        "source.ts support.variable",
        "source.ts support.variable.object.node",
        "source.ts support.variable.object.process"
        // "source.ts support.class.console"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.ts emphasis",
        "source.ts markup.bold",
        "source.ts strong"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.ts markup.italic"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "italic"
      }
    },
    {
      "scope": [
        "source.ts punctuation.quasi",
        "source.ts string.quasi",
        "source.ts invalid",
        "source.ts invalid.illegal",
        "source.ts invalid.illegal.newline"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.ts invalid.deprecated"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "underline"
      }
    },
    // #endregion
    // #region "TypeScript REACT (TSX)" ----------------------------------------
    // #region TS INTERFACE START HERE
    {
      "name": "Interface and Type Aliase definition keyword",
      "scope": [
        "source.tsx storage.type.enum",
        "source.tsx storage.type.interface",
        "source.tsx storage.type.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Interface and Type Aliase definition name",
      "scope": [
        "source.tsx meta.interface entity.name.type.interface",
        "entity.name.type.alias"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Property Definition in Interface",
      "scope": [
        "source.tsx meta.interface meta.definition.property variable.object.property"
      ],
      "settings": {
        "foreground": "#AADDCCBB",
        "fontStyle": ""
      }
    },
    {
      "name": "Primitive Annotation in Interface and Type Aliase",
      "scope": [
        "source.tsx meta.interface meta.type.annotation support.type.primitive",
        "source.tsx meta.type.declaration support.type.primitive"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",
        "fontStyle": ""
      }
    },
    {
      "name": "Entity Name Type Annotation in Interface and Type Aliases",
      "scope": [
        "source.tsx meta.interface meta.type.annotation entity.name.type",
        "source.tsx meta.type.declaration entity.name.type",
        "source.tsx meta.type.declaration meta.type.function.return meta.type.parameters entity.name.type",
        "source.tsx meta.function meta.block meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",
        "fontStyle": ""
      }
    },
    // #endregion TS INTERFACE END HERE
    {
      "name": "Types",
      "scope": [
        "source.tsx meta.type.declaration meta.type.parameters entity.name.type",
        "source.tsx meta.function meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Types",
      "scope": [
        "source.tsx entity.name.type",
        "source.tsx meta.parameters entity.name.type",
        "source.tsx meta.type.annotation meta.type.parameters entity.name.type",
        "source.tsx meta.type.annotation",
        "source.tsx meta.type.parameters entity.name.type",
        "source.tsx type.annotation"
      ],
      "settings": {
        "foreground": "#FFCC55CC",
        "fontStyle": ""
      }
    },
    {
      "name": "Types primitives",
      "scope": [
        "source.tsx meta.type.annotation meta.type.parameters support.type.primitive",
        "source.tsx support.type.primitive"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",  "#FFCC55CC",
        "fontStyle": ""
      }
    },
    {
      "name": "Functions",
      "scope": [
        "source.tsx entity.name.function",
        "source.tsx meta.definition.function.tsx entity.name.function",
        "source.tsx meta.definition.method",
        "source.tsx meta.definition.variable entity.name.function",
        "source.tsx meta.field.declaration.tsx"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/,
        "fontStyle": ""
      }
    },
    {
      "name": "Function Like",
      "scope": [
        "source.tsx support.function.builtin",
        "source.tsx support.function.git-rebase",
        "source.tsx support.function",
        "source.tsx support.function.math",
        "source.tsx support.function.process"
        // "source.tsx support.function.console"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "New Class",
      "scope": [
        "source.tsx entity.other.inherited-class",
        "source.tsx new.expr entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Function Return Type",
      "scope": [
        "source.tsx meta.return.type entity.name.type",
        "source.tsx meta.return.type support.type.primitive"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Function Return Type parameter name type",
      "scope": [
        "source.tsx meta.return.type meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55CC",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Function Return Type parameter primitive type",
      "scope": [
        "source.tsx meta.return.type meta.type.parameters support.type.primitive"
      ],
      "settings": {
        "foreground": "#EE77BBAA", // "#FFCC55CC",  "#EE77BBAA",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Function Return Type parameter punctuation",
      "scope": [
        "source.tsx meta.return.type meta.type.parameters punctuation.definition.typeparameters",
        "source.tsx meta.return.type meta.type.tuple meta.brace.square",
        "source.tsx meta.return.type keyword.operator.type"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "name": "Types",
      "scope": [
        "source.tsx entity.name.type.class",
        "source.tsx entity.name.type.enum",
        "source.tsx entity.name.type.instance",
        "source.tsx entity.name.type.module"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Entitys",
      "scope": [
        "source.tsx punctuation.definition.template-expression.begin",
        "source.tsx punctuation.definition.template-expression.end",
        "source.tsx punctuation.definition.parameters.begin",
        "source.tsx punctuation.definition.parameters.end",
        "source.tsx meta.brace.angle",
        "source.tsx meta.brace.round",
        "source.tsx meta.brace.square",
        "source.tsx punctuation.definition.block",
        "source.tsx entity.function",
        "source.tsx entity.name",
        "source.tsx entity.other.attribute-name.css",
        "source.tsx entity.other.attribute-name.directive",
        "source.tsx entity.other.attribute-name",
        "source.tsx entity.other.inherited-class",
        "source.tsx entity.static"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "name": "Entitys",
      "scope": [
        "source.tsx meta.decorator entity.name",
        "source.tsx meta.decorator entity.name.function",
        "source.tsx meta.decorator meta.function-call entity.name",
        "source.tsx meta.decorator variable.other.readwrite"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "regexp constants",
      "scope": [
        "source.tsx string.regexp constant.other.character-class.set.regexp"
      ],
      "settings": {
        "foreground": "#E67D" /*#E67E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "regexp string",
      "scope": [
        "source.tsx meta.var.expr string.regexp"
      ],
      "settings": {
        "foreground": "#9C8D" /*#9C8D*/,
        "fontStyle": ""
      }
    },
    {
      "name": "regexp other punctuation",
      "scope": [
        "source.tsx string.regexp punctuation.definition.character-class.regexp"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/,
        "fontStyle": ""
      }
    },
    // console.log etc ...
    {
      "name": "console function",
      "scope": [
        "source support.function.console"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "console class",
      "scope": [
        "source support.class.console"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "regexp punctuation",
      "scope": [
        "source support.function.promise"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "regexp punctuation",
      "scope": [
        "source.tsx string.regexp punctuation.definition.string.begin",
        "source.tsx string.regexp punctuation.definition.string.end"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Variables",
      "scope": [
        "source.tsx variable.other.enummember",
        "source.tsx variable.arguments",
        "source.tsx variable.class",
        "source.tsx variable.language.arguments",
        "source.tsx variable.language",
        "source.tsx variable.name",
        "source.tsx variable.other.constant.object",
        "source.tsx variable.other.constant",
        "source.tsx variable.other.readwrite.alias",
        "source.tsx meta.array-binding-pattern-variable variable.other.constant",
        "source.tsx variable.other.readwrite",
        "source.tsx variable.other.readwrite",
        "source.tsx variable.other.regexp",
        "source.tsx variable.other",
        "source.tsx variable.parameter",
        "source.tsx variable",
        "source.tsx meta.array-binding-pattern-variable variable.other.constant",
        "source.tsx meta.object-binding-pattern-variable variable.other.constant"
      ],
      "settings": {
        "foreground": "#ADCC"
      }
    },
    {
      "name": "Other Constant",
      "scope": [
        "source.tsx meta.object-binding-pattern-variable variable.other.constant",
        "source.tsx meta.object.member meta.object-literal.key",
        "source.tsx meta.objectliteral meta.object.member",
        "source.tsx meta.var.expr meta.object-literal.key",
        "source.tsx variable.object.property",
        "source.tsx variable.other.constant.object.property",
        "source.tsx variable.other.constant.property",
        "source.tsx variable.other.property"
      ],
      "settings": {
        "foreground": "#6BFC"
      }
    },
    {
      "name": "support properties",
      "scope": [
        /*         "source.tsx support.variable.property",
        "source.tsx support.variable.property.importmeta",
        "source.tsx support.variable.property.process",
        "source.tsx support.variable.property.target",
        "source.tsx support.type.property-name",
        "source.tsx support.type.property-name.css",
        "source.tsx support.property-value",
        "source.tsx support.property-value.scss", */
        "source.tsx support.constant.property.math"
      ],
      "settings": {
        "foreground": "#66BBFFBB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "support properties",
      "scope": [
        "source.tsx support.variable.property",
        "source.tsx support.variable.property.importmeta",
        "source.tsx support.variable.property.process",
        "source.tsx support.variable.property.target",
        "source.tsx support.type.property-name",
        "source.tsx support.type.property-name.css",
        "source.tsx support.property-value",
        "source.tsx support.property-value.scss"
        // "source.tsx support.constant.property.math"
      ],
      "settings": {
        "foreground": "#66BBFFAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Constants",
      "scope": [
        "source.tsx constant",
        "source.tsx constant.character.escape.backslash.regexp",
        "source.tsx constant.character.numeric.regexp",
        "source.tsx constant.language",
        "source.tsx constant.language.import-export-all",
        "source.tsx constant.other.character-class.range.regexp",
        "source.tsx constant.other.character-class.regexp",
        "source.tsx constant.other.character-class.set.regexp",
        "source.tsx constant.rgb-value",
        "source.tsx constant.sha.git-rebase",
        "source.tsx constant.character.escape",
        "source.tsx constant.numeric",
        "source.tsx constant.numeric.binary",
        "source.tsx constant.numeric.decimal",
        "source.tsx constant.numeric.hex",
        "source.tsx constant.numeric.octal"
      ],
      "settings": {
        "foreground": "#E67D" /*#E67E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "Strings",
      "scope": [
        "source.tsx string",
        "source.tsx string.constant.other.placeholder",
        "source.tsx string.entity",
        "source.tsx string.escape",
        "source.tsx string.quoted.double",
        "source.tsx string.quoted.single",
        "source.tsx string.regexp",
        "source.tsx string.tag",
        "source.tsx string.template",
        "source.tsx string.value"
      ],
      "settings": {
        "foreground": "#CE5C"
      }
    },
    {
      "name": "ARROW FUNCTION STYLE",
      "scope": [
        "source.tsx storage.type.function.arrow"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "FUNCTION KEYWORD STYLE",
      "scope": [
        "source.tsx storage.type.function"
      ],
      "settings": {
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "FUNCTION KEYWORD OR ARROW COLOUR",
      "scope": [
        "source.tsx storage.type.function",
        "source.tsx storage.type.function.arrow"
      ],
      "settings": {
        "foreground": "#7C2C"
      }
    },
    {
      "name": "CLASS KEYWORD DEFINITION",
      "scope": [
        "source.tsx storage.type.class"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Constructor Keyword",
      "scope": [
        "source.tsx meta.method.declaration.tsx storage.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Extends, Get, Implements, Private, Public, Set, etc...",
      "scope": [
        "source.tsx meta.class storage.modifier",
        "source.tsx meta.method.declaration storage.modifier",
        "source.tsx storage.type.property"
      ],
      "settings": {
        "foreground": "#F91D" /*#F91E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "NEW KEYWORD DEFINITION",
      "scope": [
        "source.tsx keyword.control.new",
        "source.tsx keyword.operator.new"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "ASYNC KEYWORD DEFINITION",
      "scope": [
        "source.tsx meta.method.declaration storage.modifier.async",
        "source.tsx storage.modifier.async"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "VARIABLE SUPER",
      "scope": [
        "source.tsx variable.language.super"
      ],
      "settings": {
        "foreground": "#E1AC" /*#E1AE*/,
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "VARIABLE THIS",
      "scope": [
        "source.tsx variable.language.this"
      ],
      "settings": {
        "foreground": "#E67C" /*#E67E*/,
        "fontStyle": "bold italic"
      }
    },
    // import is italic
    {
      "name": "Import variables are italic",
      "scope": [
        "source.tsx meta.import variable.other.readwrite.alias",
        "source.tsx meta.import variable.other.readwrite"
      ],
      "settings": {
        "foreground": "#AADDCCBB",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Import variables are italic",
      "scope": [
        "source.tsx meta.import punctuation.definition.block"
      ],
      "settings": {
        "foreground": "#FFDD00BB",
        "fontStyle": "bold italic"
      }
    },
    //     "source.tsx constant.language.import-export-all",
    {
      "name": "Star in import expor all",
      "scope": [
        "source.tsx constant.language.import-export-all"
      ],
      "settings": {
        "foreground": "#EE6677BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Import strings are italic",
      "scope": [
        "source.tsx meta.import string.quoted.single",
        "source.tsx meta.import string.quoted.double"
      ],
      "settings": {
        "foreground": "#CCEE55BB",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Import default as and From",
      "scope": [
        "source.tsx meta.import keyword.control.as",
        "source.tsx meta.import keyword.control.default",
        "source.tsx meta.import keyword.control.from",
        "source.tsx meta.import keyword.control.import"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Enum, Export, Import, Interface, Namespace, Type, etc",
      "scope": [
        "source.tsx storage.type.internaldeclaration",
        "source.tsx storage.type.namespace",
        "source.tsx storage.type",
        "source.tsx keyword.control.from",
        "source.tsx keyword.control.import",
        "source.tsx keyword.control.export",
        "source.tsx meta.export.default keyword.control.default"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "KEYWORD.CONTROL others ETC.",
      "scope": [
        "source.tsx keyword.control.as",
        "source.tsx keyword.control.default",
        "source.tsx keyword.control",
        "source.tsx keyword.control.anchor.regexp",
        "source.tsx keyword.control.conditional",
        "source.tsx keyword.control.less",
        "source.tsx keyword.control.loop",
        "source.tsx keyword.control.module",
        "source.tsx keyword.control.require",
        "source.tsx keyword.control.switch",
        "source.tsx keyword.control.trycatch",
        "source.tsx keyword.control.with",
        "source.tsx keyword",
        "source.tsx keyword.other",
        "source.tsx keyword.generator.asterisk",
        "source.tsx meta.block keyword.control.flow",
        "source.tsx keyword.operator.logical",
        "source.tsx storage.type.numeric.bigint"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": ""
      }
    },
    {
      "name": "STORAGE TYPE => LET CONST etc ....",
      "scope": [
        "source.tsx storage.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "STORAGE TYPE => LET CONST etc ....",
      "scope": [
        "source.tsx meta.block meta.var.expr storage.type"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": "italic"
      }
    },
    {
      "scope": [
        "source.tsx punctuation.decorator"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.tsx constant.language.boolean.false"
      ],
      "settings": {
        "foreground": "#EE4433BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.tsx constant.language.boolean.true"
      ],
      "settings": {
        "foreground": "#77CC22BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.tsx constant.language.undefined"
      ],
      "settings": {
        "foreground": "#AA77BBAA",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.tsx constant.language.null"
      ],
      "settings": {
        "foreground": "#EE6677BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.tsx support.type.builtin"
      ],
      "settings": {
        "foreground": "#EE77BBAA",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.tsx constant.language.infinity",
        "source.tsx constant.language.nan"
      ],
      "settings": {
        "foreground": "#77AADDBB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Operators",
      "scope": [
        "source.tsx keyword.operator.arithmetic",
        "source.tsx keyword.operator.assignment.compound.bitwise",
        "source.tsx keyword.operator.assignment.compound",
        "source.tsx keyword.operator.bitwise.shift",
        "source.tsx keyword.operator.bitwise",
        "source.tsx keyword.operator.decrement",
        "source.tsx keyword.operator.increment",
        "source.tsx keyword.operator.definiteassignment",
        "source.tsx keyword.operator",
        "source.tsx keyword.operator.comparison",
        "source.tsx keyword.operator.ternary",
        "source.tsx punctuation.separator.key-value",
        "source.tsx keyword.operator.assignment",
        "source.tsx keyword.operator.type.annotation",
        "source.tsx keyword.operator.expression.delete",
        "source.tsx keyword.operator.expression.import",
        "source.tsx keyword.operator.expression.in",
        "source.tsx keyword.operator.expression.infer",
        "source.tsx keyword.operator.expression.instanceof",
        "source.tsx keyword.operator.expression.is",
        "source.tsx keyword.operator.expression.keyof",
        "source.tsx keyword.operator.expression.of",
        "source.tsx keyword.operator.expression.typeof",
        "source.tsx keyword.operator.expression.void",
        "source.tsx keyword.operator.negation.regexp",
        "source.tsx keyword.operator.optional",
        "source.tsx keyword.operator.or.regexp",
        "source.tsx keyword.operator.quantifier.regexp",
        "source.tsx keyword.operator.relational",
        "source.tsx keyword.operator.type.modifier",
        "source.tsx keyword.operator.type"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.tsx keyword.operator.spread",
        "source.tsx keyword.operator.rest"
      ],
      "settings": {
        "foreground": "#44BB99AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Others",
      "scope": [
        "source.tsx *link*",
        "source.tsx *uri*",
        "source.tsx *url*",
        "source.tsx case-clause.expr ",
        "source.tsx case-clause.expr",
        "source.tsx cast.expr",
        "source.tsx header",
        "source.tsx keyword.other.back-reference.regexp",
        "source.tsx keyword.other.unit",
        "source.tsx markup.changed",
        "source.tsx markup.deleted",
        "source.tsx markup.heading",
        "source.tsx markup.inline.raw",
        "source.tsx markup.inserted",
        "source.tsx markup.punctuation.list.beginning",
        "source.tsx markup.punctuation.quote.beginning",
        "source.tsx markup.underline",
        "source.tsx module.node",
        "source.tsx new.expr",
        "source.tsx prototype",
        "source.tsx punctuation.definition.binding-pattern.array",
        "source.tsx punctuation.definition.binding-pattern.object",
        "source.tsx source.embedded",
        "source.tsx switch-block.expr",
        "source.tsx switch-expression.expr",
        "source.tsx switch-statement.expr",
        "source.tsx variable.other.object",
        "source.tsx meta.object.member variable.other.object"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.tsx support.class",
        "source.tsx support.class.builtin",
        "source.tsx support.class.node",
        "source.tsx support.class.promise",
        "source.tsx support.constant",
        "source.tsx support.constant",
        "source.tsx support.constant.math",
        "source.tsx support.type",
        "source.tsx support.type.object.module",
        "source.tsx support.variable",
        "source.tsx support.variable.object.node",
        "source.tsx support.variable.object.process"
        // "source.tsx support.class.console"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.tsx emphasis",
        "source.tsx markup.bold",
        "source.tsx strong"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.tsx markup.italic"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "italic"
      }
    },
    {
      "scope": [
        "source.tsx punctuation.quasi",
        "source.tsx string.quasi",
        "source.tsx invalid",
        "source.tsx invalid.illegal",
        "source.tsx invalid.illegal.newline"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.tsx invalid.deprecated"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "underline"
      }
    },
    // #endregion
    // #region "JavaScript" ----------------------------------------------------
    // #region TS INTERFACE START HERE (not used in JavaScript)
    {
      "name": "Interface and Type Aliase definition keyword",
      "scope": [
        "source.js storage.type.enum",
        "source.js storage.type.interface",
        "source.js storage.type.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Interface and Type Aliase definition name",
      "scope": [
        "source.js meta.interface entity.name.type.interface",
        "entity.name.type.alias"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Property Definition in Interface",
      "scope": [
        "source.js meta.interface meta.definition.property variable.object.property"
      ],
      "settings": {
        "foreground": "#AADDCCBB",
        "fontStyle": ""
      }
    },
    {
      "name": "Primitive Annotation in Interface and Type Aliase",
      "scope": [
        "source.js meta.interface meta.type.annotation support.type.primitive",
        "source.js meta.type.declaration support.type.primitive"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",
        "fontStyle": ""
      }
    },
    {
      "name": "Entity Name Type Annotation in Interface and Type Aliases",
      "scope": [
        "source.js meta.interface meta.type.annotation entity.name.type",
        "source.js meta.type.declaration entity.name.type",
        "source.js meta.type.declaration meta.type.function.return meta.type.parameters entity.name.type",
        "source.js meta.function meta.block meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",
        "fontStyle": ""
      }
    },
    // #endregion TS INTERFACE END HERE
    {
      "name": "Types",
      "scope": [
        "source.js meta.type.declaration meta.type.parameters entity.name.type",
        "source.js meta.function meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Types",
      "scope": [
        "source.js entity.name.type",
        "source.js meta.parameters entity.name.type",
        "source.js meta.type.annotation meta.type.parameters entity.name.type",
        "source.js meta.type.annotation",
        "source.js meta.type.parameters entity.name.type",
        "source.js type.annotation"
      ],
      "settings": {
        "foreground": "#FFCC55CC",
        "fontStyle": ""
      }
    },
    {
      "name": "Types primitives",
      "scope": [
        "source.js meta.type.annotation meta.type.parameters support.type.primitive",
        "source.js support.type.primitive"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",  "#FFCC55CC",
        "fontStyle": ""
      }
    },
    {
      "name": "Functions",
      "scope": [
        "source.js entity.name.function",
        "source.js meta.definition.function.js entity.name.function",
        "source.js meta.definition.method",
        "source.js meta.definition.variable entity.name.function",
        "source.js meta.field.declaration.js",
        "source.js support.function"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/,
        "fontStyle": ""
      }
    },
    {
      "name": "Function Like",
      "scope": [
        "source.js support.function.builtin",
        // "source.js support.function.git-rebase",
        // "source.js support.function",
        "source.js support.function.math"
        // "source.js support.function.process"
        // "source.js support.function.console"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Function Like",
      "scope": [
        // "source.js support.function.builtin",
        "source.js support.function.git-rebase",
        "source.js support.function.dom",
        // "source.js support.function.math",
        "source.js support.function.process"
        // "source.js support.function.console"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "New Class",
      "scope": [
        "source.js entity.other.inherited-class",
        "source.js new.expr entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Function Return Type",
      "scope": [
        "source.js meta.return.type entity.name.type",
        "source.js meta.return.type support.type.primitive"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Function Return Type parameter name type",
      "scope": [
        "source.js meta.return.type meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55CC",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Function Return Type parameter primitive type",
      "scope": [
        "source.js meta.return.type meta.type.parameters support.type.primitive"
      ],
      "settings": {
        "foreground": "#EE77BBAA", // "#FFCC55CC",  "#EE77BBAA",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Function Return Type parameter punctuation",
      "scope": [
        "source.js meta.return.type meta.type.parameters punctuation.definition.typeparameters",
        "source.js meta.return.type meta.type.tuple meta.brace.square",
        "source.js meta.return.type keyword.operator.type"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "name": "Types",
      "scope": [
        "source.js entity.name.type.class",
        "source.js entity.name.type.enum",
        "source.js entity.name.type.instance",
        "source.js entity.name.type.module"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Entitys",
      "scope": [
        "source.js punctuation.definition.template-expression.begin",
        "source.js punctuation.definition.template-expression.end",
        "source.js punctuation.definition.parameters.begin",
        "source.js punctuation.definition.parameters.end",
        "source.js meta.brace.angle",
        "source.js meta.brace.round",
        "source.js meta.brace.square",
        "source.js punctuation.definition.block",
        "source.js entity.function",
        "source.js entity.name",
        "source.js entity.other.attribute-name.css",
        "source.js entity.other.attribute-name.directive",
        "source.js entity.other.attribute-name",
        "source.js entity.other.inherited-class",
        "source.js entity.static"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "name": "Entitys",
      "scope": [
        "source.js meta.decorator entity.name",
        "source.js meta.decorator entity.name.function",
        "source.js meta.decorator meta.function-call entity.name",
        "source.js meta.decorator variable.other.readwrite"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "regexp constants",
      "scope": [
        "source.js string.regexp constant.other.character-class.set.regexp"
      ],
      "settings": {
        "foreground": "#E67D" /*#E67E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "regexp string",
      "scope": [
        "source.js meta.var.expr string.regexp"
      ],
      "settings": {
        "foreground": "#9C8D" /*#9C8D*/,
        "fontStyle": ""
      }
    },
    {
      "name": "regexp other punctuation",
      "scope": [
        "source.js string.regexp punctuation.definition.character-class.regexp"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/,
        "fontStyle": ""
      }
    },
    /*
source.js support.function.promise
support.class.console.js
support.function.console.js
    */
    // console.log etc ...
    // console.log etc ...
    // console.log etc ...
    {
      "name": "console function",
      "scope": [
        "source support.function.console"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "console class",
      "scope": [
        "source support.class.console"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "regexp punctuation",
      "scope": [
        "source support.function.promise"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "regexp punctuation",
      "scope": [
        "source.js string.regexp punctuation.definition.string.begin",
        "source.js string.regexp punctuation.definition.string.end"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Variables",
      "scope": [
        "source.js variable.other.enummember",
        "source.js variable.arguments",
        "source.js variable.class",
        "source.js variable.language.arguments",
        "source.js variable.language",
        "source.js variable.name",
        "source.js variable.other.constant.object",
        "source.js variable.other.constant",
        "source.js variable.other.readwrite.alias",
        "source.js meta.array-binding-pattern-variable variable.other.constant",
        "source.js variable.other.readwrite",
        "source.js variable.other.readwrite",
        "source.js variable.other.regexp",
        "source.js variable.other",
        "source.js variable.parameter",
        "source.js variable",
        "source.js meta.array-binding-pattern-variable variable.other.constant",
        "source.js meta.object-binding-pattern-variable variable.other.constant"
      ],
      "settings": {
        "foreground": "#ADCC"
      }
    },
    {
      "name": "Other Constant",
      "scope": [
        "source.js meta.object-binding-pattern-variable variable.other.constant",
        "source.js meta.object.member meta.object-literal.key",
        "source.js meta.objectliteral meta.object.member",
        "source.js meta.var.expr meta.object-literal.key",
        "source.js variable.object.property",
        "source.js variable.other.constant.object.property",
        "source.js variable.other.constant.property",
        "source.js variable.other.property"
      ],
      "settings": {
        "foreground": "#6BFC"
      }
    },
    {
      "name": "support properties",
      "scope": [
        /*         "source.js support.variable.property",
        "source.js support.variable.property.importmeta",
        "source.js support.variable.property.process",
        "source.js support.variable.property.target",
        "source.js support.type.property-name",
        "source.js support.type.property-name.css",
        "source.js support.property-value",
        "source.js support.property-value.scss", */
        "source.js support.constant.property.math"
      ],
      "settings": {
        "foreground": "#66BBFFBB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "support properties",
      "scope": [
        "source.js support.variable.property",
        "source.js support.variable.property.importmeta",
        "source.js support.variable.property.process",
        "source.js support.variable.property.target",
        "source.js support.type.property-name",
        "source.js support.type.property-name.css",
        "source.js support.property-value",
        "source.js support.property-value.scss"
        // "source.js support.constant.property.math"
      ],
      "settings": {
        "foreground": "#66BBFFAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Constants",
      "scope": [
        "source.js constant",
        "source.js constant.character.escape.backslash.regexp",
        "source.js constant.character.numeric.regexp",
        "source.js constant.language",
        "source.js constant.language.import-export-all",
        "source.js constant.other.character-class.range.regexp",
        "source.js constant.other.character-class.regexp",
        "source.js constant.other.character-class.set.regexp",
        "source.js constant.rgb-value",
        "source.js constant.sha.git-rebase",
        "source.js constant.character.escape",
        "source.js constant.numeric",
        "source.js constant.numeric.binary",
        "source.js constant.numeric.decimal",
        "source.js constant.numeric.hex",
        "source.js constant.numeric.octal"
      ],
      "settings": {
        "foreground": "#E67D" /*#E67E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "Strings",
      "scope": [
        "source.js string",
        "source.js string.constant.other.placeholder",
        "source.js string.entity",
        "source.js string.escape",
        "source.js string.quoted.double",
        "source.js string.quoted.single",
        "source.js string.regexp",
        "source.js string.tag",
        "source.js string.template",
        "source.js string.value"
      ],
      "settings": {
        "foreground": "#CE5C"
      }
    },
    {
      "name": "ARROW FUNCTION STYLE",
      "scope": [
        "source.js storage.type.function.arrow"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "FUNCTION KEYWORD STYLE",
      "scope": [
        "source.js storage.type.function"
      ],
      "settings": {
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "FUNCTION KEYWORD OR ARROW COLOUR",
      "scope": [
        "source.js storage.type.function",
        "source.js storage.type.function.arrow"
      ],
      "settings": {
        "foreground": "#7C2C"
      }
    },
    {
      "name": "CLASS KEYWORD DEFINITION",
      "scope": [
        "source.js storage.type.class"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Constructor Keyword",
      "scope": [
        "source.js meta.method.declaration.js storage.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Extends, Get, Implements, Private, Public, Set, etc...",
      "scope": [
        "source.js meta.class storage.modifier",
        "source.js meta.method.declaration storage.modifier",
        "source.js storage.type.property"
      ],
      "settings": {
        "foreground": "#F91D" /*#F91E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "NEW KEYWORD DEFINITION",
      "scope": [
        "source.js keyword.control.new",
        "source.js keyword.operator.new"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "ASYNC KEYWORD DEFINITION",
      "scope": [
        "source.js meta.method.declaration storage.modifier.async",
        "source.js storage.modifier.async"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "VARIABLE SUPER",
      "scope": [
        "source.js variable.language.super"
      ],
      "settings": {
        "foreground": "#E1AC" /*#E1AE*/,
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "VARIABLE THIS",
      "scope": [
        "source.js variable.language.this"
      ],
      "settings": {
        "foreground": "#E67C" /*#E67E*/,
        "fontStyle": "bold italic"
      }
    },
    // import is italic
    {
      "name": "Import variables are italic",
      "scope": [
        "source.js meta.import variable.other.readwrite.alias",
        "source.js meta.import variable.other.readwrite"
      ],
      "settings": {
        "foreground": "#AADDCCBB",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Import variables are italic",
      "scope": [
        "source.js meta.import punctuation.definition.block"
      ],
      "settings": {
        "foreground": "#FFDD00BB",
        "fontStyle": "bold italic"
      }
    },
    //     "source.js constant.language.import-export-all",
    {
      "name": "Star in import expor all",
      "scope": [
        "source.js constant.language.import-export-all"
      ],
      "settings": {
        "foreground": "#EE6677BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Import strings are italic",
      "scope": [
        "source.js meta.import string.quoted.single",
        "source.js meta.import string.quoted.double"
      ],
      "settings": {
        "foreground": "#CCEE55BB",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Import default as and From",
      "scope": [
        "source.js meta.import keyword.control.as",
        "source.js meta.import keyword.control.default",
        "source.js meta.import keyword.control.from",
        "source.js meta.import keyword.control.import"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Enum, Export, Import, Interface, Namespace, Type, etc",
      "scope": [
        "source.js storage.type.internaldeclaration",
        "source.js storage.type.namespace",
        "source.js storage.type",
        "source.js keyword.control.from",
        "source.js keyword.control.import",
        "source.js keyword.control.export",
        "source.js meta.export.default keyword.control.default"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "KEYWORD.CONTROL others ETC.",
      "scope": [
        "source.js keyword.control.as",
        "source.js keyword.control.default",
        "source.js keyword.control",
        "source.js keyword.control.anchor.regexp",
        "source.js keyword.control.conditional",
        "source.js keyword.control.less",
        "source.js keyword.control.loop",
        "source.js keyword.control.module",
        "source.js keyword.control.require",
        "source.js keyword.control.switch",
        "source.js keyword.control.trycatch",
        "source.js keyword.control.with",
        "source.js keyword",
        "source.js keyword.other",
        "source.js keyword.generator.asterisk",
        "source.js meta.block keyword.control.flow",
        "source.js keyword.operator.logical",
        "source.js storage.type.numeric.bigint"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": ""
      }
    },
    {
      "name": "STORAGE TYPE => LET CONST etc ....",
      "scope": [
        "source.js storage.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "STORAGE TYPE => LET CONST etc ....",
      "scope": [
        "source.js meta.block meta.var.expr storage.type"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": "italic"
      }
    },
    {
      "scope": [
        "source.js punctuation.decorator"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.js constant.language.boolean.false"
      ],
      "settings": {
        "foreground": "#EE4433BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.js constant.language.boolean.true"
      ],
      "settings": {
        "foreground": "#77CC22BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.js constant.language.undefined"
      ],
      "settings": {
        "foreground": "#AA77BBAA",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.js constant.language.null"
      ],
      "settings": {
        "foreground": "#EE6677BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source.js support.type.builtin"
      ],
      "settings": {
        "foreground": "#EE77BBAA",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.js constant.language.infinity",
        "source.js constant.language.nan"
      ],
      "settings": {
        "foreground": "#77AADDBB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Big Int",
      "scope": [
        "source.js storage.type.numeric.bigint"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Operators",
      "scope": [
        "source.js keyword.operator.arithmetic",
        "source.js keyword.operator.assignment.compound.bitwise",
        "source.js keyword.operator.assignment.compound",
        "source.js keyword.operator.bitwise.shift",
        "source.js keyword.operator.bitwise",
        "source.js keyword.operator.decrement",
        "source.js keyword.operator.increment",
        "source.js keyword.operator.definiteassignment",
        "source.js keyword.operator",
        "source.js keyword.operator.comparison",
        "source.js keyword.operator.ternary",
        "source.js punctuation.separator.key-value",
        "source.js keyword.operator.assignment",
        "source.js keyword.operator.type.annotation",
        "source.js keyword.operator.expression.delete",
        "source.js keyword.operator.expression.import",
        "source.js keyword.operator.expression.in",
        "source.js keyword.operator.expression.infer",
        "source.js keyword.operator.expression.instanceof",
        "source.js keyword.operator.expression.is",
        "source.js keyword.operator.expression.keyof",
        "source.js keyword.operator.expression.of",
        "source.js keyword.operator.expression.typeof",
        "source.js keyword.operator.expression.void",
        "source.js keyword.operator.negation.regexp",
        "source.js keyword.operator.optional",
        "source.js keyword.operator.or.regexp",
        "source.js keyword.operator.quantifier.regexp",
        "source.js keyword.operator.relational",
        "source.js keyword.operator.type.modifier",
        "source.js keyword.operator.type"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.js keyword.operator.spread",
        "source.js keyword.operator.rest"
      ],
      "settings": {
        "foreground": "#44BB99AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Others",
      "scope": [
        "source.js *link*",
        "source.js *uri*",
        "source.js *url*",
        "source.js case-clause.expr ",
        "source.js case-clause.expr",
        "source.js cast.expr",
        "source.js header",
        "source.js keyword.other.back-reference.regexp",
        "source.js keyword.other.unit",
        "source.js markup.changed",
        "source.js markup.deleted",
        "source.js markup.heading",
        "source.js markup.inline.raw",
        "source.js markup.inserted",
        "source.js markup.punctuation.list.beginning",
        "source.js markup.punctuation.quote.beginning",
        "source.js markup.underline",
        "source.js module.node",
        "source.js new.expr",
        "source.js prototype",
        "source.js punctuation.definition.binding-pattern.array",
        "source.js punctuation.definition.binding-pattern.object",
        "source.js source.embedded",
        "source.js switch-block.expr",
        "source.js switch-expression.expr",
        "source.js switch-statement.expr",
        "source.js variable.other.object",
        "source.js meta.object.member variable.other.object"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.js support.class",
        "source.js support.class.builtin",
        "source.js support.class.node",
        "source.js support.class.promise",
        "source.js support.constant",
        "source.js support.constant",
        "source.js support.constant.math",
        "source.js support.type",
        "source.js support.type.object.module",
        "source.js support.variable",
        "source.js support.variable.object.node",
        "source.js support.variable.object.process"
        // "source.js support.class.console"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.js emphasis",
        "source.js markup.bold",
        "source.js strong"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.js markup.italic"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "italic"
      }
    },
    {
      "scope": [
        "source.js punctuation.quasi",
        "source.js string.quasi",
        "source.js invalid",
        "source.js invalid.illegal",
        "source.js invalid.illegal.newline"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.js invalid.deprecated"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "underline"
      }
    },
    // #endregion
    // #region "JSON" ----------------------------------------------------------
    // "#FFCC55CC","#99CC88CC","#CCEE55BB","#DD8899CC","#55BBEECC","#DDDDDDCC","#39ED"
    {
      "name": "JSON key-value separator",
      "scope": [
        "source.json punctuation.separator.dictionary.key-value"
      ],
      "settings": {
        "foreground": "#BB3"
      }
    },
    {
      "name": "JSON numeric value",
      "scope": "source.json constant.numeric",
      "settings": {
        "foreground": "#DDD"
      }
    },
    {
      "name": "JSON constant value color",
      "scope": [
        "source.json constant.language"
      ],
      "settings": {
        "foreground": "#5BED" /*#5BEE*/,
        "fontStyle": "italic bold"
      }
    },
    {
      "name": "JSON string value",
      "scope": "source.json string.quoted.double",
      "settings": {
        "foreground": "#CE5C"
      }
    },
    {
      "name": "JSON Level 0",
      "scope": [
        "source.json meta.structure.dictionary.json support.type.property-name"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/
      }
    },
    {
      "name": "JSON Level 1",
      "scope": [
        "source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name"
      ],
      "settings": {
        "foreground": "#D89"
      }
    },
    {
      "name": "JSON Level 2",
      "scope": [
        "source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name"
      ],
      "settings": {
        "foreground": "#9C8"
      }
    },
    {
      "name": "JSON Level 3",
      "scope": [
        "source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name"
      ],
      "settings": {
        "foreground": "#5BE"
      }
    },
    {
      "name": "JSON Level 4",
      "scope": [
        "source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name"
      ],
      "settings": {
        "foreground": "#DDD"
      }
    },
    {
      "name": "JSON Level 5 and more",
      "scope": [
        "source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name"
      ],
      "settings": {
        "foreground": "#9C8"
      }
    },
    {
      "name": "JSON Level 6 and more",
      "scope": [
        "source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/
      }
    },
    {
      "scope": [
        "source.json string.quasi"
      ],
      "settings": {
        "foreground": "#BB3355DD",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.json punctuation.quasi"
      ],
      "settings": {
        "foreground": "#E42C3EDD",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.json invalid"
      ],
      "settings": {
        "foreground": "#BB3355DD",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.json invalid.deprecated"
      ],
      "settings": {
        "foreground": "#BB3355DD",
        "fontStyle": "underline"
      }
    },
    {
      "scope": [
        "source.json invalid.illegal"
      ],
      "settings": {
        "foreground": "#BB3355DD",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.json invalid.illegal.newline"
      ],
      "settings": {
        "foreground": "#BB3355DD",
        "fontStyle": ""
      }
    },
    // #endregion
    // #region "YAML" ----------------------------------------------------------
    {
      "name": "YAML Comment",
      "scope": [
        "source.yaml comment.line.number-sign"
      ],
      "settings": {
        "foreground": "#22BBDD88",
        "fontStyle": ""
      }
    },
    {
      "name": "YAML Comment Punctuation",
      "scope": [
        "source.yaml comment.line.number-sign punctuation.definition.comment"
      ],
      "settings": {
        "foreground": "#44AAEEAA",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.yaml string.quoted.double",
        "source.yaml string.quoted.single",
        "source.yaml string.unquoted.plain.out"
      ],
      "settings": {
        "foreground": "#CE5B"
      }
    },
    {
      "scope": [
        "source.yaml punctuation.definition.block.sequence.item",
        "source.yaml punctuation.separator.key-value.mapping"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.yaml string.unquoted.plain.out entity.name.tag"
      ],
      "settings": {
        "foreground": "#FC5B"
      }
    },
    {
      "scope": [
        "source.yaml string.unquoted.plain.in entity.name.tag"
      ],
      "settings": {
        "foreground": "#D89B"
      }
    },
    {
      "scope": [
        "source.yaml string.unquoted.plain.in",
        "source.yaml constant.language.boolean.yaml"
      ],
      "settings": {
        "foreground": "#9C8B"
      }
    },
    // #endregion
    // #region "JSDOCs" --------------------------------------------------------
    {
      "scope": [
        "comment.block.documentation.js punctuation.definition.comment.js",
        "comment.block.documentation.ts punctuation.definition.comment.ts",
        "comment.block.documentation.js",
        "comment.block.documentation.ts"
      ],
      "settings": {
        "foreground": "#666677BB",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "storage.type.class.jsdoc punctuation.definition.block.tag.jsdoc"
      ],
      "settings": {
        "foreground": "#EE3355AA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "storage.type.class.jsdoc"
      ],
      "settings": {
        "foreground": "#EEDDAA88",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "constant.other.email.link.underline.jsdoc",
        "variable.other.link.underline.jsdoc"
      ],
      "settings": {
        "foreground": "#DDBB99AA",
        "fontStyle": "underline"
      }
    },
    {
      "scope": [
        "punctuation.definition.bracket.angle.begin.jsdoc",
        "punctuation.definition.bracket.angle.end.jsdoc",
        "punctuation.definition.bracket.curly.begin.jsdoc",
        "punctuation.definition.bracket.curly.end.jsdoc",
        "punctuation.definition.bracket.square.begin.jsdoc",
        "punctuation.definition.bracket.square.end.jsdoc",
        "punctuation.definition.optional-value.begin.bracket.square.jsdoc",
        "punctuation.definition.optional-value.end.bracket.square.jsdoc"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "constant.language.access-type.jsdoc",
        "constant.language.symbol-type.jsdoc",
        "constant.other.description.jsdoc",
        "entity.name.tag.inline.jsdoc",
        "entity.name.type.instance.jsdoc",
        "keyword.operator.assignment.jsdoc",
        "keyword.operator.control.jsdoc",
        "meta.example.jsdoc",
        "punctuation.definition.inline.tag.jsdoc",
        "punctuation.separator.pipe.jsdoc",
        "variable.other.description.jsdoc",
        "variable.other.jsdoc"
      ],
      "settings": {
        "foreground": "#666677AA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "entity.name.type.instance.jsdoc"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "comment.block.documentation variable.other.jsdoc"
      ],
      "settings": {
        "foreground": "#AA33DDBB",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "keyword.operator.assignment.jsdoc"
      ],
      "settings": {
        "foreground": "#44BB99AA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "variable.other.jsdoc source.embedded"
      ],
      "settings": {
        "foreground": "#66BBFFBB",
        "fontStyle": ""
      }
    },
    // #endregion
    // #region "POPPING AND LOCKING ORIGINAL" ----------------------------------
    {
      "scope": "emphasis",
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "scope": "strong",
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "scope": "header",
      "settings": {
        "foreground": "#458588FF"
      }
    },
    {
      "name": "Comments",
      "scope": [
        "comment",
        "punctuation.definition.comment"
      ],
      "settings": {
        "foreground": "#506899DD",
        "fontStyle": "italic"
      }
    },
    {
      "scope": [
        "constant",
        "variable.arguments"
      ],
      "settings": {
        "foreground": "#d3869bFF"
      }
    },
    {
      "scope": "constant.rgb-value",
      "settings": {
        "foreground": "#ebdbb2FF"
      }
    },
    {
      "scope": "entity.name.selector",
      "settings": {
        "foreground": "#7ec16eFF"
      }
    },
    {
      "scope": "entity.other.attribute-name",
      "settings": {
        "foreground": "#7ec16eFF"
      }
    },
    {
      "scope": "entity.other.attribute-name.css",
      "settings": {
        "foreground": "#fe8019FF"
      }
    },
    {
      "scope": "invalid",
      "settings": {
        "foreground": "#cc241dFF"
      }
    },
    {
      "scope": "markup.underline",
      "settings": {
        "fontStyle": "underline"
      }
    },
    {
      "scope": "markup.bold",
      "settings": {
        "fontStyle": "bold",
        "foreground": "#fe8019FF"
      }
    },
    {
      "scope": "markup.heading",
      "settings": {
        "fontStyle": "bold",
        "foreground": "#fe8019FF"
      }
    },
    {
      "scope": "markup.italic",
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "scope": "markup.inserted",
      "settings": {
        "foreground": "#b8bb26FF"
      }
    },
    {
      "scope": "markup.deleted",
      "settings": {
        "foreground": "#d65E0eFF"
      }
    },
    {
      "scope": "markup.changed",
      "settings": {
        "foreground": "#fe8019FF"
      }
    },
    {
      "scope": "markup.punctuation.quote.beginning",
      "settings": {
        "foreground": "#98971aFF"
      }
    },
    {
      "scope": "markup.punctuation.list.beginning",
      "settings": {
        "foreground": "#99c6caFF"
      }
    },
    {
      "scope": "markup.inline.raw",
      "settings": {
        "foreground": "#d65E0eFF"
      }
    },
    {
      "scope": "meta.selector",
      "settings": {
        "foreground": "#7ec16eFF"
      }
    },
    {
      "name": "brackets of XML tags",
      "scope": [],
      "settings": {
        "foreground": "#d79921FF"
      }
    },
    {
      "scope": "meta.preprocessor",
      "settings": {
        "foreground": "#fe8019FF"
      }
    },
    {
      "scope": "meta.preprocessor.string",
      "settings": {
        "foreground": "#b8bb26FF"
      }
    },
    {
      "scope": "meta.preprocessor.numeric",
      "settings": {
        "foreground": "#b8bb26FF"
      }
    },
    {
      "scope": "meta.structure.dictionary.key.python",
      "settings": {
        "foreground": "#689E6aFF"
      }
    },
    {
      "scope": "meta.header.diff",
      "settings": {
        "foreground": "#fe8019FF"
      }
    },
    {
      "scope": "storage",
      "settings": {
        "foreground": "#f42c3eFF"
      }
    },
    {
      "scope": "storage.modifier",
      "settings": {
        "foreground": "#fe8019FF"
      }
    },
    {
      "scope": "string",
      "settings": {
        "foreground": "#b8bb26FF"
      }
    },
    {
      "scope": "string.tag",
      "settings": {
        "foreground": "#b8bb26FF"
      }
    },
    {
      "scope": "string.value",
      "settings": {
        "foreground": "#b8bb26FF"
      }
    },
    {
      "scope": "string.regexp",
      "settings": {
        "foreground": "#fe8019FF"
      }
    },
    {
      "scope": "string.escape",
      "settings": {
        "foreground": "#f42c3eFF"
      }
    },
    {
      "scope": "string.quasi",
      "settings": {
        "foreground": "#7ec16eFF"
      }
    },
    {
      "scope": "string.entity",
      "settings": {
        "foreground": "#b8bb26FF"
      }
    },
    {
      "scope": "object",
      "settings": {
        "foreground": "#ebdbb2FF"
      }
    },
    {
      "scope": "module.node",
      "settings": {
        "foreground": "#99c6caFF"
      }
    },
    {
      "scope": "support.type.property-name",
      "settings": {
        "foreground": "#fabE2fFF"
      }
    },
    {
      "scope": "keyword",
      "settings": {
        "foreground": "#f42c3eFF"
      }
    },
    {
      "scope": "keyword.control",
      "settings": {
        "foreground": "#B6BD" /*#B6BE*/
      }
    },
    {
      "scope": "keyword.control.module",
      "settings": {
        "foreground": "#7ec16eFF"
      }
    },
    {
      "scope": "keyword.control.less",
      "settings": {
        "foreground": "#d79921FF"
      }
    },
    {
      "scope": "keyword.operator",
      "settings": {
        "foreground": "#7ec16eFF"
      }
    },
    {
      "scope": "keyword.operator.new",
      "settings": {
        "foreground": "#fe8019FF"
      }
    },
    {
      "scope": "keyword.other.unit",
      "settings": {
        "foreground": "#b8bb26FF"
      }
    },
    {
      "scope": "metatag.php",
      "settings": {
        "foreground": "#fe8019FF"
      }
    },
    {
      "scope": "support.function.git-rebase",
      "settings": {
        "foreground": "#689E6aFF"
      }
    },
    {
      "scope": "constant.sha.git-rebase",
      "settings": {
        "foreground": "#b8bb26FF"
      }
    },
    {
      "name": "coloring of the Java import and package identifiers",
      "scope": [
        "storage.modifier.import.java",
        "storage.modifier.package.java"
      ],
      "settings": {
        "foreground": "#ebdbb2FF"
      }
    },
    {
      "name": "Types declaration and references",
      "scope": [
        "meta.type.name",
        "meta.cast",
        "meta.type.annotation",
        "support.type",
        "storage.type.cs",
        "storage.type.java",
        "variable.class"
      ],
      "settings": {
        "foreground": "#fabE2fFF"
      }
    },
    {
      "scope": "variable.this",
      "settings": {
        "foreground": "#d3869bFF"
      }
    },
    {
      "scope": [
        "entity.name",
        "entity.static",
        "entity.name.class.static.function",
        "entity.name.function",
        "entity.name.class",
        "entity.name.type"
      ],
      "settings": {
        "foreground": "#fabE2fFF"
      }
    },
    {
      "name": "Function declarations",
      "scope": [
        "storage.type.function",
        "entity.function",
        "entity.name.function.static"
      ],
      "settings": {
        "foreground": "#7ec16eFF"
      }
    },
    {
      "name": "Variable names that are specified by the language",
      "scope": [
        "variable.language"
      ],
      "settings": {
        "foreground": "#D3869BDD",
        "fontStyle": "italic"
      }
    },
    {
      "scope": "entity.name.function.function-call",
      "settings": {
        "foreground": "#7ec16eFF"
      }
    },
    {
      "scope": [
        "entity.name.method",
        "entity.name.method.function-call",
        "entity.name.static.function-call"
      ],
      "settings": {
        "foreground": "#689E6aFF"
      }
    },
    {
      "scope": "brace",
      "settings": {
        "foreground": "#d5c4a1FF"
      }
    },
    {
      "name": "Variable and parameter name",
      "scope": [
        "meta.parameter.type.variable",
        "variable.parameter",
        "variable",
        "variable.name",
        "variable.other"
      ],
      "settings": {
        "foreground": "#99c6caFF"
      }
    },
    {
      "name": "CSS property value",
      "scope": [
        "support.property-value",
        "constant.rgb-value",
        "support.property-value.scss",
        "constant.rgb-value.scss"
      ],
      "settings": {
        "foreground": "#d65E0eFF"
      }
    },
    {
      "scope": "prototype",
      "settings": {
        "foreground": "#d3869bFF"
      }
    },
    {
      "scope": "storage.type.class",
      "settings": {
        "foreground": "#f42c3eFF"
      }
    },
    // {
    //   "name": "CSS propperty",
    //   "scope": "support.type.property-name.css",
    //   "settings": {
    //     "foreground": "#fabE2fFF"
    //   }
    // },
    // {
    //   "name": "CSS propperty value",
    //   "scope": [
    //     "meta.property-group",
    //     "support.constant.property-value.css"
    //   ],
    //   "settings": {
    //     "foreground": "#b8bb26FF"
    //   }
    // },
    {
      "name": "HTML and JSX Tags",
      "scope": [
        "entity.name.tag",
        "punctuation.tag"
      ],
      "settings": {
        "foreground": "#fabE2fFF"
      }
    },
    {
      "scope": [
        "punctuation"
      ],
      "settings": {
        "foreground": "#ebdbb2FF"
      }
    },
    {
      "scope": "punctuation.quasi",
      "settings": {
        "foreground": "#f42c3eFF"
      }
    },
    // #endregion "POPPING AND LOCKING ORIGINAL --------------------------------
    // #region "JSX / TSX TAGS" ------------------------------------------------
    // "#BE5B" "#FC5D" "#ADCC" "#6BFC" "#FEBE"
    {
      "scope": [
        "meta.tag meta.jsx.children"
      ],
      "settings": {
        "foreground": "#EDAB"
      }
    },
    {
      "scope": [
        "meta.tag keyword.operator.assignment.tsx",
        "meta.tag keyword.operator.assignment.js"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "meta.tag entity.other.attribute-name.tsx",
        "meta.tag entity.other.attribute-name.js",
        "meta.tag meta.tag.attributes.tsx",
        "meta.tag meta.tag.attributes.js"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/
      }
    },
    {
      "scope": [
        "meta.tag string.quoted.double.tsx",
        "meta.tag string.quoted.double.js",
        "meta.tag string.quoted.single.tsx",
        "meta.tag string.quoted.single.js"
      ],
      "settings": {
        "foreground": "#BE5B"
      }
    },
    {
      "scope": [],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/
      }
    },
    {
      "scope": [
        "meta.tag entity.name.tag.tsx",
        "meta.tag entity.name.tag.js"
      ],
      "settings": {
        "foreground": "#AADDCCBB",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "meta.tag support.class.component.tsx",
        "meta.tag support.class.component.js"
      ],
      "settings": {
        "foreground": "#88BBDDBB",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "meta.tag punctuation.definition.tag.begin.tsx",
        "meta.tag punctuation.definition.tag.end.tsx"
      ],
      "settings": {
        "foreground": "#6CED" /*#6CEE*/, //"#AA55EECC", /*#A5EE*/
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "meta.tag punctuation.definition.tag.begin.js",
        "meta.tag punctuation.definition.tag.end.js"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/,
        "fontStyle": ""
      }
    },
    // #endregion "JSX / TSX TAGS" ------------------------------------------------
    // #region "HTML" ----------------------------------------------------------
    // "#BE5B" "#FC5D" "#ADCC" "#6BFC" "#EDAB" "#4B9D""#D79F" "#DF8E"
    // "#fabE2fFF""#b8bb26FF""#8ec07cFF""#d3869bFF""#369ec7FF""#B35F""#EDAB"
    /* support.function.misc.css



     */
    {
      "scope": [
        "text.html meta.tag punctuation.definition.tag"
      ],
      "settings": {
        "foreground": "#FECD" /*#FECE*/,
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "text.html meta.tag entity.name.tag"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/,
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "text.html meta.tag entity.other.attribute-name"
      ],
      "settings": {
        "foreground": "#AADD33BB",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "text.html meta.tag meta.attribute string.quoted.single",
        "text.html meta.tag meta.attribute string.quoted.double"
      ],
      "settings": {
        "foreground": "#EEEE33BB",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "text.html meta.tag meta.attribute string",
        "text.html.derivative constant.character.entity"
      ],
      "settings": {
        "foreground": "#F73D" /*#F73E*/,
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "text.html"
      ],
      "settings": {
        "foreground": "#FECD" /*#FECE*/,
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "text.html.derivative comment.block.html"
      ],
      "settings": {
        "foreground": "#66DDFF88",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "text.html.derivative comment.block punctuation.definition.comment"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/,
        "fontStyle": ""
      }
    },
    // #endregion
    // #region "script in HTML" ------------------------------------------------
    // {
    //   "scope": [
    //     "text.html source variable.arguments",
    //     "text.html source variable.class",
    //     "text.html source variable.language.arguments",
    //     "text.html source variable.language",
    //     "text.html source variable.name",
    //     "text.html source variable.other.constant.object",
    //     "text.html source variable.other.constant",
    //     "text.html source variable.other.readwrite.alias",
    //     "text.html source meta.array-binding-pattern-variable variable.other.constant",
    //     "text.html source variable.other.readwrite",
    //     "text.html source variable.other.readwrite",
    //     "text.html source variable.other.regexp",
    //     "text.html source variable.other",
    //     "text.html source variable.parameter",
    //     "text.html source meta.objectliteral meta.object.member variable.other.object",
    //     "text.html source variable",
    //     "text.html source meta.object-binding-pattern-variable variable.other.constant",
    //     "text.html source meta.object.member meta.object-literal.key",
    //     "text.html source meta.objectliteral meta.object.member",
    //     "text.html source meta.var.expr meta.object-literal.key",
    //     "text.html source variable.object.property",
    //     "text.html source variable.other.constant.object.property",
    //     "text.html source variable.other.constant.property",
    //     "text.html source variable.other.object.property",
    //     "text.html source variable.other.property",
    //     "text.html source support.variable.property",
    //     "text.html source support.variable.property.importmeta",
    //     "text.html source support.variable.property.process",
    //     "text.html source support.variable.property.target",
    //     "text.html source support.type.property-name",
    //     "text.html source support.type.property-name.css",
    //     "text.html source support.property-value",
    //     "text.html source support.property-value.scss",
    //     "text.html source support.constant.property.math"
    //   ],
    //   "settings": { "foreground": "#8DCF" }
    // },
    // {
    //   "scope": [
    //     "text.html source support.function.builtin",
    //     "text.html source support.function.git-rebase",
    //     "text.html source support.function",
    //     "text.html source support.function.math",
    //     "text.html source support.function.process",
    //     "text.html source support.function.console",
    //     "text.html source meta.definition.variable entity.name.function",
    //     "text.html source meta.definition.function entity.name.function",
    //     "text.html source support.function",
    //     "text.html source support.function",
    //     "text.html source meta.definition.method",
    //     "text.html source entity.name.function",
    //     "text.html source entity.other.inherited-class",
    //     "text.html source meta.type.declaration support.type.primitive",
    //     "text.html source support.type.primitive",
    //     "text.html source meta.interface support.type.primitive",
    //     "text.html source type.annotation",
    //     "text.html source entity.name.type"
    //   ],
    //   "settings": {
    //     "foreground": "#FC5D" /*#FC5D*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": [
    //     "text.html source string",
    //     "text.html source string.constant.other.placeholder",
    //     "text.html source string.entity",
    //     "text.html source string.escape",
    //     "text.html source string.quoted.double",
    //     "text.html source string.quoted.single",
    //     "text.html source string.regexp",
    //     "text.html source string.tag",
    //     "text.html source string.template",
    //     "text.html source string.value",
    //     "text.html source meta.interface variable.object.property",
    //     "text.html source variable.other.enummember"
    //   ],
    //   "settings": {
    //     "foreground": "#DF8D" /*#DF8E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": [
    //     "text.html source storage.type.interface",
    //     "text.html source storage.type.type",
    //     "text.html source storage.type.enum"
    //   ],
    //   "settings": {
    //     "foreground": "#D1AD" /*#D1AE*/,
    //     "fontStyle": "bold"
    //   }
    // },
    // {
    //   "scope": [
    //     "text.html source variable.other.object",
    //     "text.html source entity.name.type.alias",
    //     "text.html source entity.name.type.class",
    //     "text.html source entity.name.type.enum",
    //     "text.html source entity.name.type.interface",
    //     "text.html source entity.name.type.module",
    //     "text.html source punctuation.definition.parameters.begin",
    //     "text.html source punctuation.definition.parameters.end",
    //     "text.html source meta.brace.angle",
    //     "text.html source meta.brace.round",
    //     "text.html source meta.brace.square",
    //     "text.html source punctuation.definition.block",
    //     "text.html source meta.decorator entity.name.function",
    //     "text.html source meta.decorator variable.other.readwrite",
    //     "text.html source punctuation.definition.template-expression.begin",
    //     "text.html source punctuation.definition.template-expression.end",
    //     "text.html source punctuation.definition.binding-pattern.array",
    //     "text.html source punctuation.definition.binding-pattern.object",
    //     "text.html source meta.array-binding-pattern-variable variable.other.constant",
    //     "text.html source meta.object-binding-pattern-variable variable.other.constant"
    //   ],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source storage.type.function.arrow"],
    //   "settings": { "fontStyle": "bold" }
    // },
    // {
    //   "scope": ["text.html source storage.type.function"],
    //   "settings": { "fontStyle": "bold italic" }
    // },
    // {
    //   "scope": [
    //     "text.html source storage.type.function",
    //     "text.html source storage.type.function.arrow",
    //     "text.html source storage.type.class"
    //   ],
    //   "settings": { "foreground": "#D1AD" /*#D1AE*/ }
    // },
    // {
    //   "scope": ["text.html source meta.method.declaration storage.type"],
    //   "settings": {
    //     "foreground": "#D1AD" /*#D1AE*/,
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": [
    //     "text.html source meta.class storage.modifier",
    //     "text.html source meta.method.declaration storage.modifier"
    //   ],
    //   "settings": {
    //     "foreground": "#E81D" /*#E81E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source variable.language.super"],
    //   "settings": {
    //     "foreground": "#D1AD" /*#D1AE*/,
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": ["text.html source variable.language.this"],
    //   "settings": {
    //     "foreground": "#CC6688DD",
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": [
    //     "text.html source keyword.control.new",
    //     "text.html source keyword.operator.new"
    //   ],
    //   "settings": {
    //     "foreground": "#F91D" /*#F91E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": [
    //     "text.html source meta.method.declaration storage.modifier.async"
    //   ],
    //   "settings": {
    //     "foreground": "#F91D" /*#F91E*/,
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": ["text.html source storage.modifier.async"],
    //   "settings": {
    //     "foreground": "#F91D" /*#F91E*/,
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": ["text.html source storage.type.property"],
    //   "settings": {
    //     "foreground": "#F91D" /*#F91E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": [
    //     "text.html source keyword.control.import",
    //     "text.html source keyword.control.export",
    //     "text.html source meta.export.default keyword.control.default",
    //     "text.html source keyword.control.as",
    //     "text.html source keyword.control.default",
    //     "text.html source keyword.control.from",
    //     "text.html source keyword.control",
    //     "text.html source keyword.control.anchor.regexp",
    //     "text.html source keyword.control.conditional",
    //     "text.html source keyword.control.less",
    //     "text.html source keyword.control.loop",
    //     "text.html source keyword.control.module",
    //     "text.html source keyword.control.require",
    //     "text.html source keyword.control.switch",
    //     "text.html source keyword.control.trycatch",
    //     "text.html source keyword.control.with",
    //     "text.html source keyword",
    //     "text.html source keyword.other",
    //     "text.html source keyword.generator.asterisk",
    //     "text.html source meta.block keyword.control.flow",
    //     "text.html source storage.type.internaldeclaration",
    //     "text.html source storage.type.namespace",
    //     "text.html source storage.type.numeric.bigint",
    //     "text.html source storage.type",
    //     "text.html source meta.block meta.var.expr storage.type",
    //     "text.html source keyword.operator.logical",
    //     "text.html source punctuation.decorator"
    //   ],
    //   "settings": {
    //     "foreground": "#F1AD" /*#F1AE*/,
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": [
    //     "text.html source constant",
    //     "text.html source constant.character.escape.backslash.regexp",
    //     "text.html source constant.character.numeric.regexp",
    //     "text.html source constant.language",
    //     "text.html source constant.language.import-export-all",
    //     "text.html source constant.other.character-class.range.regexp",
    //     "text.html source constant.other.character-class.regexp",
    //     "text.html source constant.other.character-class.set.regexp",
    //     "text.html source constant.rgb-value",
    //     "text.html source constant.sha.git-rebase",
    //     "text.html source constant.character.escape",
    //     "text.html source support.constant.property-value.css",
    //     "text.html source constant.numeric",
    //     "text.html source constant.numeric.binary",
    //     "text.html source constant.numeric.decimal",
    //     "text.html source constant.numeric.hex",
    //     "text.html source constant.numeric.octal"
    //   ],
    //   "settings": {
    //     "foreground": "#D5AD" /*#D5AE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source constant.language.boolean.false"],
    //   "settings": {
    //     "foreground": "#E43D" /*#E43E*/,
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": ["text.html source constant.language.boolean.true"],
    //   "settings": {
    //     "foreground": "#77CC22CC",
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": ["text.html source constant.language.undefined"],
    //   "settings": {
    //     "foreground": "#B6BD" /*#B6BE*/,
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": ["text.html source constant.language.null"],
    //   "settings": {
    //     "foreground": "#D65D" /*#D65E*/,
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": ["text.html source constant.language.infinity"],
    //   "settings": {
    //     "foreground": "#7ADD" /*#7ADE*/,
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": ["text.html source constant.language.nan"],
    //   "settings": {
    //     "foreground": "#7ADD" /*#7ADE*/,
    //     "fontStyle": "italic"
    //   }
    // },
    // {
    //   "scope": ["text.html source string.quasi"],
    //   "settings": {
    //     "foreground": "#B35D" /*#B35E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source punctuation.quasi"],
    //   "settings": {
    //     "foreground": "#B35D" /*#B35E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source invalid"],
    //   "settings": {
    //     "foreground": "#B35D" /*#B35E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source invalid.deprecated"],
    //   "settings": {
    //     "foreground": "#B35D" /*#B35E*/,
    //     "fontStyle": "underline"
    //   }
    // },
    // {
    //   "scope": ["text.html source invalid.illegal"],
    //   "settings": {
    //     "foreground": "#B35D" /*#B35E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source invalid.illegal.newline"],
    //   "settings": {
    //     "foreground": "#B35D" /*#B35E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source emphasis"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source header"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source keyword.other.back-reference.regexp"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source keyword.other.unit"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source markup.bold"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source markup.changed"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source markup.deleted"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source markup.heading"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source markup.inline.raw"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source markup.inserted"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source markup.italic"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source markup.punctuation.list.beginning"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source markup.punctuation.quote.beginning"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source markup.underline"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source module.node"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source new.expr"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source prototype"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source source.embedded"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source strong"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source switch-block.expr"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source switch-expression.expr"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source switch-statement.expr"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source *link*"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source *uri*"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source *url*"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source case-clause.expr "],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source case-clause.expr"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source cast.expr"],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": ["text.html source support.type.builtin"],
    //   "settings": {
    //     "foreground": "#D65D" /*#D65E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": [
    //     "text.html source keyword.operator.arithmetic",
    //     "text.html source keyword.operator.assignment.compound.bitwise",
    //     "text.html source keyword.operator.assignment.compound",
    //     "text.html source keyword.operator.bitwise.shift",
    //     "text.html source keyword.operator.bitwise",
    //     "text.html source keyword.operator.decrement",
    //     "text.html source keyword.operator.increment",
    //     "text.html source keyword.operator.definiteassignment",
    //     "text.html source keyword.operator",
    //     "text.html source keyword.operator.comparison",
    //     "text.html source keyword.operator.ternary",
    //     "text.html source punctuation.separator.key-value",
    //     "text.html source keyword.operator.assignment",
    //     "text.html source keyword.operator.type.annotation",
    //     "text.html source keyword.operator.expression.delete",
    //     "text.html source keyword.operator.expression.import",
    //     "text.html source keyword.operator.expression.in",
    //     "text.html source keyword.operator.expression.infer",
    //     "text.html source keyword.operator.expression.instanceof",
    //     "text.html source keyword.operator.expression.is",
    //     "text.html source keyword.operator.expression.keyof",
    //     "text.html source keyword.operator.expression.of",
    //     "text.html source keyword.operator.expression.typeof",
    //     "text.html source keyword.operator.expression.void",
    //     "text.html source keyword.operator.negation.regexp",
    //     "text.html source keyword.operator.optional",
    //     "text.html source keyword.operator.or.regexp",
    //     "text.html source keyword.operator.quantifier.regexp",
    //     "text.html source keyword.operator.relational",
    //     "text.html source keyword.operator.type.modifier",
    //     "text.html source keyword.operator.type",
    //     "text.html source keyword.operator.spread",
    //     "text.html source keyword.operator.rest"
    //   ],
    //   "settings": {
    //     "foreground": "#9E8D" /*#9E8E*/,
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": [],
    //   "settings": {
    //     "foreground": "#DD2255AA",
    //     "fontStyle": ""
    //   }
    // },
    // {
    //   "scope": [
    //     "text.html source punctuation.accessor.optional",
    //     "text.html source punctuation.accessor",
    //     "text.html source punctuation.decorator.internaldeclaration",
    //     "text.html source punctuation.definition.character-class.regexp",
    //     "text.html source punctuation.definition.group.assertion.regexp",
    //     "text.html source punctuation.definition.group.no-capture.regexp",
    //     "text.html source punctuation.definition.group.regexp",
    //     "text.html source punctuation.definition.section.case-statement",
    //     "text.html source punctuation.definition.typeparameters.begin",
    //     "text.html source punctuation.definition.typeparameters.end",
    //     "text.html source punctuation.definition.tag.directive",
    //     "text.html source punctuation.destructuring",
    //     "text.html source punctuation.quoted",
    //     "text.html source punctuation.separator.comma",
    //     "text.html source punctuation.separator.label",
    //     "text.html source punctuation.separator.parameter",
    //     "text.html source punctuation.tag",
    //     "text.html source punctuation.whitespace.comment.leading",
    //     "text.html source support.class",
    //     "text.html source support.class.builtin",
    //     "text.html source support.class.node",
    //     "text.html source support.class.promise",
    //     "text.html source support.constant",
    //     "text.html source support.constant",
    //     "text.html source support.constant.math",
    //     "text.html source support.type",
    //     "text.html source support.type.object.module",
    //     "text.html source support.variable",
    //     "text.html source support.variable.object.node",
    //     "text.html source support.variable.object.process",
    //     "text.html source support.class.console",
    //     "text.html source entity.function",
    //     "text.html source entity.name.class.static.function",
    //     "text.html source entity.name.class",
    //     "text.html source entity.name.function.function-call",
    //     "text.html source entity.name.function.static",
    //     "text.html source entity.name.function.tagged-template",
    //     "text.html source entity.name.label",
    //     "text.html source entity.name.method.function-call",
    //     "text.html source entity.name.method",
    //     "text.html source entity.name.selector",
    //     "text.html source entity.name.static.function-call",
    //     "text.html source entity.name.tag.directive",
    //     "text.html source entity.name.tag",
    //     "text.html source entity.name",
    //     "text.html source entity.other.attribute-name.css",
    //     "text.html source entity.other.attribute-name.directive",
    //     "text.html source entity.other.attribute-name",
    //     "text.html source entity.other.inherited-class",
    //     "text.html source entity.static",
    //     "text.html source meta.array-binding-pattern-variable",
    //     "text.html source meta.array.literal",
    //     "text.html source meta.arrow",
    //     "text.html source meta.assertion.look-ahead.regexp",
    //     "text.html source meta.assertion.look-behind.regexp",
    //     "text.html source meta.assertion.negative-look-ahead.regexp",
    //     "text.html source meta.assertion.negative-look-behind.regexp",
    //     "text.html source meta.block",
    //     "text.html source meta.cast",
    //     "text.html source meta.class",
    //     "text.html source meta.decorator",
    //     "text.html source meta.definition.function",
    //     "text.html source meta.definition.method",
    //     "text.html source meta.definition.property",
    //     "text.html source meta.definition.variable",
    //     "text.html source meta.delimiter.decimal.period",
    //     "text.html source meta.enum.declaration",
    //     "text.html source meta.export",
    //     "text.html source meta.export.default",
    //     "text.html source meta.field.declaration",
    //     "text.html source meta.function",
    //     "text.html source meta.function-call",
    //     "text.html source meta.function.expression",
    //     "text.html source meta.group.assertion.regexp",
    //     "text.html source meta.group.regexp",
    //     "text.html source meta.header.diff",
    //     "text.html source meta.import",
    //     "text.html source meta.import-equals.external",
    //     "text.html source meta.import-equals.internal",
    //     "text.html source meta.indexer.declaration",
    //     "text.html source meta.indexer.mappedtype.declaration",
    //     "text.html source meta.interface",
    //     "text.html source meta.method.declaration",
    //     "text.html source meta.namespace.declaration",
    //     "text.html source meta.object-binding-pattern-variable",
    //     "text.html source meta.object-literal.key",
    //     "text.html source meta.object.member",
    //     "text.html source meta.object.type",
    //     "text.html source meta.objectliteral",
    //     "text.html source meta.parameter.object-binding-pattern",
    //     "text.html source meta.parameter.type.variable",
    //     "text.html source meta.parameters",
    //     "text.html source meta.paramter.array-binding-pattern",
    //     "text.html source meta.preprocessor",
    //     "text.html source meta.preprocessor.numeric",
    //     "text.html source meta.preprocessor.string",
    //     "text.html source meta.property-group",
    //     "text.html source meta.selector",
    //     "text.html source meta.structure.dictionary.key.python",
    //     "text.html source meta.tag",
    //     "text.html source meta.template.expression",
    //     "text.html source meta.type.annotation",
    //     "text.html source meta.type.constructor",
    //     "text.html source meta.type.declaration",
    //     "text.html source meta.type.function",
    //     "text.html source meta.type.function.return",
    //     "text.html source meta.type.name",
    //     "text.html source meta.type.parameters",
    //     "text.html source meta.type.paren.cover",
    //     "text.html source meta.type.tuple",
    //     "text.html source meta.var-single-variable.expr",
    //     "text.html source meta.var.expr"
    //   ],
    //   "settings": {
    //     "foreground": "#FEBD" /*#FEBE*/,
    //     "fontStyle": ""
    //   }
    // },
    // // #endregion
    // #region "CSS" -----------------------------------------------------------
    // entity.name.tag.css entity.other.attribute-name.pseudo-class.css
    /*
keyword.other.unit.px.css
constant.numeric.css
meta.property-value.css
meta.property-list.css
source.css
    */
    {
      "name": "css comment block punctuation",
      "scope": [
        "source.css comment.block punctuation.definition.comment"
      ],
      "settings": {
        "foreground": "#FC5C" /*#FC5D*/,
        "fontStyle": "bold"
      }
    },
    {
      "name": "css comment block",
      "scope": [
        "source.css comment.block"
      ],
      "settings": {
        "foreground": "#53EC" /*#53EE*/,
        "fontStyle": "bold"
      }
    },
    {
      "name": "css TAG ELEMENT",
      "scope": [
        "source.css meta.selector entity.name.tag"
      ],
      "settings": {
        "foreground": "#5AEC" /*#5AEE*/,
        "fontStyle": "bold"
      }
    }, //
    {
      "name": "css PSEUDO-ELEMENT",
      "scope": [
        "source.css meta.selector entity.other.attribute-name.pseudo-element"
      ],
      "settings": {
        "foreground": "#EE8855BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "css CLASS",
      "scope": [
        "source.css meta.selector entity.other.attribute-name.class punctuation.definition.entity",
        "source.css meta.selector entity.other.attribute-name.class"
      ],
      "settings": {
        "foreground": "#FEBC" /*#FEBE*/,
        "fontStyle": "bold"
      }
    },
    {
      "name": "css PSEUDO-CLASS",
      "scope": [
        "source.css meta.selector entity.other.attribute-name.pseudo-class",
        "source.css meta.property-list meta.property-value meta.function.color.css"
      ],
      "settings": {
        "foreground": "#FC5C" /*#FC5D*/,
        "fontStyle": "bold"
      }
    },
    {
      "name": "css PSEUDO-CLASS",
      "scope": [
        "source.css meta.property-list meta.property-value meta.function.color.css"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5D*/,
        "fontStyle": ""
      }
    },
    {
      "name": "css #ID",
      "scope": [
        "source.css meta.selector entity.other.attribute-name.id punctuation.definition.entity",
        "source.css meta.selector entity.other.attribute-name.id"
      ],
      "settings": {
        "foreground": "#EE8855DD",
        "fontStyle": "bold"
      }
    },
    {
      "name": "css property-name",
      "scope": [
        "source.css meta.property-list meta.property-name support.type.property-name.css",
        "source.css support.type.property-name.css"
      ],
      "settings": {
        "foreground": "#88DDCCDD",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source.css meta.at-rule.media.header support.type.property-name.media"
      ],
      "settings": {
        "foreground": "#FC5C" /*#FC5D*/,
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.css meta.at-rule.media.header.css"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.css keyword.control.at-rule.media punctuation.definition.keyword",
        "source.css meta.at-rule.media.header support.constant.media"
      ],
      "settings": {
        "foreground": "#FEBC" /*#FEBE*/,
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.css meta.at-rule.media.header keyword.control.at-rule.media"
      ],
      "settings": {
        "foreground": "#D4CC" /*#D4CE*/,
        "fontStyle": "bold italic"
      }
    },
    /*
constant.numeric.css
meta.function.color.css
meta.property-value.css
meta.property-list.css
source.css

upport.constant.property-value.css
meta.property-value.css
meta.property-list.css
source.css

meta.property-value support.constant.property-value
meta.property-value.css
meta.property-list.css
source.css
    */
    {
      "name": "css UNIT keyword",
      "scope": [
        "source.css meta.property-value keyword.other.unit",
        "source.css entity.other.attribute-name.css",
        "source.css meta.at-rule.media.header keyword.other.unit"
      ],
      "settings": {
        "foreground": "#CCEE55BB",
        "fontStyle": ""
      }
    },
    {
      "name": "css property value",
      "scope": [
        "source.css support.constant.property-value",
        "source.css meta.property-value support.constant.property-value"
      ],
      "settings": {
        "foreground": "#D2CD" /*#D5AE*/,
        "fontStyle": ""
      }
    },
    {
      "name": "css numeric value",
      "scope": [
        "source.css meta.property-value constant.numeric",
        "source.css meta.at-rule.media.header constant.numeric"
      ],
      "settings": {
        "foreground": "#E67D" /*#D5AE*/,
        "fontStyle": ""
      }
    },
    {
      "name": "css STRINGS",
      "scope": [
        "source.css string.quoted.double.css",
        "source.css string.quoted.single.css"
      ],
      "settings": {
        "foreground": "#DF8D" /*#DF8E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "css PUNCTUATION",
      "scope": [
        "source.css meta.selector entity.other.attribute-name.pseudo-element punctuation.definition.entity",
        "source.css meta.selector entity.other.attribute-name.pseudo-class punctuation.definition.entity"
      ],
      "settings": {
        "foreground": "#FEBC" /*#FEBE*/,
        "fontStyle": "bold"
      }
    },
    {
      "name": "css keyword IMPORTANT",
      "scope": [
        "source.css meta.property-value keyword.other.important",
        "source.css meta.at-rule.media.header keyword.operator.logical"
      ],
      "settings": {
        "foreground": "#FF4422BB",
        "fontStyle": "bold"
      }
    },
    // // #endregion
    // #region "OTHERS" --------------------------------------------------------
    // #region TS INTERFACE START HERE
    {
      "name": "Interface and Type Aliase definition keyword",
      "scope": [
        "source storage.type.enum",
        "source storage.type.interface",
        "source storage.type.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Interface and Type Aliase definition name",
      "scope": [
        "source meta.interface entity.name.type.interface",
        "entity.name.type.alias"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Property Definition in Interface",
      "scope": [
        "source meta.interface meta.definition.property variable.object.property"
      ],
      "settings": {
        "foreground": "#AADDCCBB",
        "fontStyle": ""
      }
    },
    {
      "name": "Primitive Annotation in Interface and Type Aliase",
      "scope": [
        "source meta.interface meta.type.annotation support.type.primitive",
        "source meta.type.declaration support.type.primitive"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",
        "fontStyle": ""
      }
    },
    {
      "name": "Entity Name Type Annotation in Interface and Type Aliases",
      "scope": [
        "source meta.interface meta.type.annotation entity.name.type",
        "source meta.type.declaration entity.name.type",
        "source meta.type.declaration meta.type.function.return meta.type.parameters entity.name.type",
        "source meta.function meta.block meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",
        "fontStyle": ""
      }
    },
    // #endregion TS INTERFACE END HERE
    {
      "name": "Types",
      "scope": [
        "source meta.type.declaration meta.type.parameters entity.name.type",
        "source meta.function meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Types",
      "scope": [
        "source entity.name.type",
        "source meta.parameters entity.name.type",
        "source meta.type.annotation meta.type.parameters entity.name.type",
        "source meta.type.annotation",
        "source meta.type.parameters entity.name.type",
        "source type.annotation"
      ],
      "settings": {
        "foreground": "#FFCC55CC",
        "fontStyle": ""
      }
    },
    {
      "name": "Types primitives",
      "scope": [
        "source meta.type.annotation meta.type.parameters support.type.primitive",
        "source support.type.primitive"
      ],
      "settings": {
        "foreground": "#FFCC55CC", //  "#EE77BBAA",  "#FFCC55CC",
        "fontStyle": ""
      }
    },
    {
      "name": "Functions",
      "scope": [
        "source entity.name.function",
        "source meta.definition.function entity.name.function",
        "source meta.definition.method",
        "source meta.definition.variable entity.name.function",
        "source meta.field.declaration"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "Function Like",
      "scope": [
        "source support.function.builtin",
        "source support.function.git-rebase",
        "source support.function",
        "source support.function.math",
        "source support.function.process"
        // "source support.function.console"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "New Class",
      "scope": [
        "source entity.other.inherited-class",
        "source new.expr entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Function Return Type",
      "scope": [
        "source meta.return.type entity.name.type",
        "source meta.return.type support.type.primitive"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Function Return Type parameter name type",
      "scope": [
        "source meta.return.type meta.type.parameters entity.name.type"
      ],
      "settings": {
        "foreground": "#FFCC55CC",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Function Return Type parameter primitive type",
      "scope": [
        "source meta.return.type meta.type.parameters support.type.primitive"
      ],
      "settings": {
        "foreground": "#EE77BBAA", // "#FFCC55DD",  "#EE77BBAA",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Function Return Type parameter punctuation",
      "scope": [
        "source meta.return.type meta.type.parameters punctuation.definition.typeparameters",
        "source meta.return.type meta.type.tuple meta.brace.square",
        "source meta.return.type keyword.operator.type"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "name": "Types",
      "scope": [
        "source entity.name.type.class",
        "source entity.name.type.enum",
        "source entity.name.type.instance",
        "source entity.name.type.module"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Entitys",
      "scope": [
        "source punctuation.definition.template-expression.begin",
        "source punctuation.definition.template-expression.end",
        "source punctuation.definition.parameters.begin",
        "source punctuation.definition.parameters.end",
        "source meta.brace.angle",
        "source meta.brace.round",
        "source meta.brace.square",
        "source punctuation.definition.block",
        "source entity.function",
        "source entity.name",
        "source entity.other.attribute-name.css",
        "source entity.other.attribute-name.directive",
        "source entity.other.attribute-name",
        "source entity.other.inherited-class",
        "source entity.static"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "name": "Entitys",
      "scope": [
        "source meta.decorator entity.name",
        "source meta.decorator entity.name.function",
        "source meta.decorator meta.function-call entity.name",
        "source meta.decorator variable.other.readwrite"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "regexp constants",
      "scope": [
        "source string.regexp constant.other.character-class.set.regexp"
      ],
      "settings": {
        "foreground": "#E67D" /*#E67E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "regexp string",
      "scope": [
        "source meta.var.expr string.regexp"
      ],
      "settings": {
        "foreground": "#9C8D" /*#9C8E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "regexp other punctuation",
      "scope": [
        "source string.regexp punctuation.definition.character-class.regexp"
      ],
      "settings": {
        "foreground": "#FC5D" /*#FC5E*/,
        "fontStyle": ""
      }
    },
    /*
    source support.function.promise
    support.class.console
    support.function.console
        */
    // console.log etc ...
    // console.log etc ...
    // console.log etc ...
    {
      "name": "console function",
      "scope": [
        "source support.function.console"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "console class",
      "scope": [
        "source support.class.console"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "regexp punctuation",
      "scope": [
        "source support.function.promise"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "regexp punctuation",
      "scope": [
        "source string.regexp punctuation.definition.string.begin",
        "source string.regexp punctuation.definition.string.end"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Variables",
      "scope": [
        "source variable.other.enummember",
        "source variable.arguments",
        "source variable.class",
        "source variable.language.arguments",
        "source variable.language",
        "source variable.name",
        "source variable.other.constant.object",
        "source variable.other.constant",
        "source variable.other.readwrite.alias",
        "source meta.array-binding-pattern-variable variable.other.constant",
        "source variable.other.readwrite",
        "source variable.other.readwrite",
        "source variable.other.regexp",
        "source variable.other",
        "source variable.parameter",
        "source variable",
        "source meta.array-binding-pattern-variable variable.other.constant",
        "source meta.object-binding-pattern-variable variable.other.constant"
      ],
      "settings": {
        "foreground": "#ADCC"
      }
    },
    {
      "name": "Other Constant",
      "scope": [
        "source meta.object-binding-pattern-variable variable.other.constant",
        "source meta.object.member meta.object-literal.key",
        "source meta.objectliteral meta.object.member",
        "source meta.var.expr meta.object-literal.key",
        "source variable.object.property",
        "source variable.other.constant.object.property",
        "source variable.other.constant.property",
        "source variable.other.property"
      ],
      "settings": {
        "foreground": "#6BFC"
      }
    },
    {
      "name": "support properties",
      "scope": [
        /*  "source support.variable.property",
            "source support.variable.property.importmeta",
            "source support.variable.property.process",
            "source support.variable.property.target",
            "source support.type.property-name",
            "source support.type.property-name.css",
            "source support.property-value",
            "source support.property-value.scss", */
        "source support.constant.property.math"
      ],
      "settings": {
        "foreground": "#66BBFFBB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "support properties",
      "scope": [
        "source support.variable.property",
        "source support.variable.property.importmeta",
        "source support.variable.property.process",
        "source support.variable.property.target",
        "source support.type.property-name",
        "source support.type.property-name.css",
        "source support.property-value",
        "source support.property-value.scss"
        // "source support.constant.property.math"
      ],
      "settings": {
        "foreground": "#66BBFFAA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Constants",
      "scope": [
        "source constant",
        "source constant.character.escape.backslash.regexp",
        "source constant.character.numeric.regexp",
        "source constant.language",
        "source constant.language.import-export-all",
        "source constant.other.character-class.range.regexp",
        "source constant.other.character-class.regexp",
        "source constant.other.character-class.set.regexp",
        "source constant.rgb-value",
        "source constant.sha.git-rebase",
        "source constant.character.escape",
        "source constant.numeric",
        "source constant.numeric.binary",
        "source constant.numeric.decimal",
        "source constant.numeric.hex",
        "source constant.numeric.octal"
      ],
      "settings": {
        "foreground": "#E67D" /*#E67E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "Strings",
      "scope": [
        "source string",
        "source string.constant.other.placeholder",
        "source string.entity",
        "source string.escape",
        "source string.quoted.double",
        "source string.quoted.single",
        "source string.regexp",
        "source string.tag",
        "source string.template",
        "source string.value"
      ],
      "settings": {
        "foreground": "#CE5C"
      }
    },
    {
      "name": "ARROW FUNCTION STYLE",
      "scope": [
        "source storage.type.function.arrow"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "FUNCTION KEYWORD STYLE",
      "scope": [
        "source storage.type.function"
      ],
      "settings": {
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "FUNCTION KEYWORD OR ARROW COLOUR",
      "scope": [
        "source storage.type.function",
        "source storage.type.function.arrow"
      ],
      "settings": {
        "foreground": "#7C2C"
      }
    },
    {
      "name": "CLASS KEYWORD DEFINITION",
      "scope": [
        "source storage.type.class"
      ],
      "settings": {
        "foreground": "#FFCC55BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Constructor Keyword",
      "scope": [
        "source meta.method.declaration storage.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Extends, Get, Implements, Private, Public, Set, etc...",
      "scope": [
        "source meta.class storage.modifier",
        "source meta.method.declaration storage.modifier",
        "source storage.type.property"
      ],
      "settings": {
        "foreground": "#F91D" /*#F91E*/,
        "fontStyle": ""
      }
    },
    {
      "name": "NEW KEYWORD DEFINITION",
      "scope": [
        "source keyword.control.new",
        "source keyword.operator.new"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "ASYNC KEYWORD DEFINITION",
      "scope": [
        "source meta.method.declaration storage.modifier.async",
        "source storage.modifier.async"
      ],
      "settings": {
        "foreground": "#FF9911BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "VARIABLE SUPER",
      "scope": [
        "source variable.language.super"
      ],
      "settings": {
        "foreground": "#E1AC" /*#E1AE*/,
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "VARIABLE THIS",
      "scope": [
        "source variable.language.this"
      ],
      "settings": {
        "foreground": "#E67C" /*#E67E*/,
        "fontStyle": "bold italic"
      }
    },
    // import is italic
    {
      "name": "Import variables are italic",
      "scope": [
        "source meta.import variable.other.readwrite.alias",
        "source meta.import variable.other.readwrite"
      ],
      "settings": {
        "foreground": "#AADDCCBB",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Import variables are italic",
      "scope": [
        "source meta.import punctuation.definition.block"
      ],
      "settings": {
        "foreground": "#FFDD00BB",
        "fontStyle": "bold italic"
      }
    },
    //     "source constant.language.import-export-all",
    {
      "name": "Star in import expor all",
      "scope": [
        "source constant.language.import-export-all"
      ],
      "settings": {
        "foreground": "#EE6677BB",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Import strings are italic",
      "scope": [
        "source meta.import string.quoted.single",
        "source meta.import string.quoted.double"
      ],
      "settings": {
        "foreground": "#CCEE55BB",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Import default as and From",
      "scope": [
        "source meta.import keyword.control.as",
        "source meta.import keyword.control.default",
        "source meta.import keyword.control.from",
        "source meta.import keyword.control.import"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Enum, Export, Import, Interface, Namespace, Type, etc",
      "scope": [
        "source storage.type.internaldeclaration",
        "source storage.type.namespace",
        "source storage.type",
        "source keyword.control.from",
        "source keyword.control.import",
        "source keyword.control.export",
        "source meta.export.default keyword.control.default"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "KEYWORD.CONTROL others ETC.",
      "scope": [
        "source keyword.control.as",
        "source keyword.control.default",
        "source keyword.control",
        "source keyword.control.anchor.regexp",
        "source keyword.control.conditional",
        "source keyword.control.less",
        "source keyword.control.loop",
        "source keyword.control.module",
        "source keyword.control.require",
        "source keyword.control.switch",
        "source keyword.control.trycatch",
        "source keyword.control.with",
        "source keyword",
        "source keyword.other",
        "source keyword.generator.asterisk",
        "source meta.block keyword.control.flow",
        "source keyword.operator.logical",
        "source storage.type.numeric.bigint"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": ""
      }
    },
    {
      "name": "STORAGE TYPE => LET CONST etc ....",
      "scope": [
        "source storage.type"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "STORAGE TYPE => LET CONST etc ....",
      "scope": [
        "source meta.block meta.var.expr storage.type"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": "italic"
      }
    },
    {
      "scope": [
        "source punctuation.decorator"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source constant.language.boolean.false"
      ],
      "settings": {
        "foreground": "#EE4433BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source constant.language.boolean.true"
      ],
      "settings": {
        "foreground": "#77CC22BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source constant.language.undefined"
      ],
      "settings": {
        "foreground": "#AA77BBAA",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source constant.language.null"
      ],
      "settings": {
        "foreground": "#EE6677BB",
        "fontStyle": "bold italic"
      }
    },
    {
      "scope": [
        "source support.type.builtin"
      ],
      "settings": {
        "foreground": "#EE77BBAA",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source constant.language.infinity",
        "source constant.language.nan"
      ],
      "settings": {
        "foreground": "#77AADDBB",
        "fontStyle": "bold italic"
      }
    },
    {
      "name": "Operators",
      "scope": [
        "source keyword.operator.arithmetic",
        "source keyword.operator.assignment.compound.bitwise",
        "source keyword.operator.assignment.compound",
        "source keyword.operator.bitwise.shift",
        "source keyword.operator.bitwise",
        "source keyword.operator.decrement",
        "source keyword.operator.increment",
        "source keyword.operator.definiteassignment",
        "source keyword.operator",
        "source keyword.operator.comparison",
        "source keyword.operator.ternary",
        "source punctuation.separator.key-value",
        "source keyword.operator.assignment",
        "source keyword.operator.type.annotation",
        "source keyword.operator.expression.delete",
        "source keyword.operator.expression.import",
        "source keyword.operator.expression.in",
        "source keyword.operator.expression.infer",
        "source keyword.operator.expression.instanceof",
        "source keyword.operator.expression.is",
        "source keyword.operator.expression.keyof",
        "source keyword.operator.expression.of",
        "source keyword.operator.expression.typeof",
        "source keyword.operator.expression.void",
        "source keyword.operator.negation.regexp",
        "source keyword.operator.optional",
        "source keyword.operator.or.regexp",
        "source keyword.operator.quantifier.regexp",
        "source keyword.operator.relational",
        "source keyword.operator.type.modifier",
        "source keyword.operator.type"
      ],
      "settings": {
        "foreground": "#44BB99BB",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source keyword.operator.spread",
        "source keyword.operator.rest"
      ],
      "settings": {
        "foreground": "#44BB99AA",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Others",
      "scope": [
        "source *link*",
        "source *uri*",
        "source *url*",
        "source case-clause.expr ",
        "source case-clause.expr",
        "source cast.expr",
        "source header",
        "source keyword.other.back-reference.regexp",
        "source keyword.other.unit",
        "source markup.changed",
        "source markup.deleted",
        "source markup.heading",
        "source markup.inline.raw",
        "source markup.inserted",
        "source markup.punctuation.list.beginning",
        "source markup.punctuation.quote.beginning",
        "source markup.underline",
        "source module.node",
        "source new.expr",
        "source prototype",
        "source punctuation.definition.binding-pattern.array",
        "source punctuation.definition.binding-pattern.object",
        "source source.embedded",
        "source switch-block.expr",
        "source switch-expression.expr",
        "source switch-statement.expr",
        "source variable.other.object",
        "source meta.object.member variable.other.object"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source support.class",
        "source support.class.builtin",
        "source support.class.node",
        "source support.class.promise",
        "source support.constant",
        "source support.constant",
        "source support.constant.math",
        "source support.type",
        "source support.type.object.module",
        "source support.variable",
        "source support.variable.object.node",
        "source support.variable.object.process"
        // "source support.class.console"
      ],
      "settings": {
        "foreground": "#EEDDAACC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source emphasis",
        "source markup.bold",
        "source strong"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source markup.italic"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "italic"
      }
    },
    {
      "scope": [
        "source punctuation.quasi",
        "source string.quasi",
        "source invalid",
        "source invalid.illegal",
        "source invalid.illegal.newline"
      ],
      "settings": {
        "foreground": "#DD2255CC",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "source invalid.deprecated"
      ],
      "settings": {
        "foreground": "#DD2255AA",
        "fontStyle": "underline"
      }
    },
    // #endregion
    // #region "MAIN" ----------------------------------------------------------
    /*
        "comment.line.triple-slash.directive meta.tag entity.name.tag.directive",
        "comment.line.triple-slash.directive entity.other.attribute-name.directive"
        "comment.line.triple-slash.directive punctuation.definition.tag.directive"
        "comment.line.triple-slash.directive punctuation.definition.comment",
        "comment.line.triple-slash.directive keyword.operator.assignment",
        "comment.line.triple-slash.directive punctuation.definition.tag.directive"
        "comment.line.triple-slash.directive string.quoted.double"

    */
    /* SHEBANG */
    {
      "scope": [
        "comment.line.shebang punctuation.definition.comment",
        "source punctuation.definition.comment.shebang"
      ],
      "settings": {
        "foreground": "#FF115588",
        "fontStyle": "bold underline"
      }
    },
    {
      "scope": [
        "source comment.line.shebang",
        "comment.line.number-sign.shebang",
        "source comment.line.number-sign.shebang"
      ],
      "settings": {
        "foreground": "#EEDDAA66",
        "fontStyle": "italic bold underline"
      }
    },
    {
      "scope": [
        "comment"
      ],
      "settings": {
        "foreground": "#666677DD",
        "fontStyle": ""
      }
    },
    /* TESTING: COMMENTS */
    // TESTING: COMMENTS
    {
      "scope": [
        "comment.line.double-slash"
      ],
      "settings": {
        "foreground": "#44DDDDAA",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "comment.line.double-slash punctuation.definition.comment"
      ],
      "settings": {
        "foreground": "#44CCDD66",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "comment.block"
      ],
      "settings": {
        "foreground": "#BB44DDAA",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "comment.block punctuation.definition.comment"
      ],
      "settings": {
        "foreground": "#BB44DD66",
        "fontStyle": "bold"
      }
    },
    /* TESTING: COMMENTS */
    // TESTING: COMMENTS
    {
      "scope": [
        "comment.line.triple-slash.directive punctuation.definition.comment"
      ],
      "settings": {
        "foreground": "#BB998866",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "comment.line.triple-slash.directive punctuation.definition.tag.directive",
        "comment.line.triple-slash.directive punctuation.definition.tag.directive",
        "comment.line.triple-slash.directive punctuation.definition.string",
        "comment.line.triple-slash.directive keyword.operator.assignment"
      ],
      "settings": {
        "foreground": "#BB998866",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "comment.line.triple-slash.directive meta.tag entity.name.tag.directive",
        "comment.line.triple-slash.directive entity.other.attribute-name.directive",
        "comment.line.triple-slash.directive string.quoted"
      ],
      "settings": {
        "foreground": "#22BBDD66",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "comment.line.triple-slash.directive string.quoted",
        "comment.line.triple-slash.directive string.quoted.single",
        "comment.line.triple-slash.directive string.quoted.double"
      ],
      "settings": {
        "foreground": "#CCEE5588",
        "fontStyle": ""
      }
    },
    {
      "scope": [
        "meta.tag punctuation.definition.string.begin.js",
        "meta.tag punctuation.definition.string.begin.tsx",
        "meta.tag punctuation.definition.string.end.js",
        "meta.tag punctuation.definition.string.end.tsx",
        "punctuation.accessor.optional",
        "punctuation.accessor",
        "punctuation.decorator.internaldeclaration",
        "punctuation.definition.character-class.regexp",
        "punctuation.definition.group.assertion.regexp",
        "punctuation.definition.group.no-capture.regexp",
        "punctuation.definition.group.regexp",
        "punctuation.definition.section.case-statement",
        "punctuation.definition.string",
        "punctuation.definition.string.template",
        "punctuation.definition.tag.directive",
        "punctuation.definition.typeparameters",
        "punctuation.destructuring",
        "punctuation.quoted",
        "punctuation.separator.comma",
        "punctuation.separator.label",
        "punctuation.separator.parameter",
        "punctuation.tag",
        "punctuation.whitespace.comment.leading",
        "source.json punctuation.definition.string",
        "string.quoted.double punctuation.definition.string",
        "string.quoted.single punctuation.definition.string",
        "text.html meta.tag meta.attribute punctuation.definition.string",
        "text.html source punctuation.definition.string",
        "text.html source punctuation.definition.string.template",
        "text.html source string.quoted.double punctuation.definition.string",
        "text.html source string.quoted.single punctuation.definition.string",
        "source.js punctuation.terminator.statement",
        "source.ts punctuation.terminator.statement",
        "punctuation.terminator.statement.ts",
        "punctuation.terminator.statement.js",
        "source.js.jsx punctuation.terminator.statement",
        "source.tsx punctuation.terminator.statement"
      ],
      "settings": {
        "foreground": "#EEDDAAAA",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "source.ts string.template punctuation.definition.template-expression.begin",
        "source.ts string.template punctuation.definition.template-expression.end"
      ],
      "settings": {
        "foreground": "#E8DD" /*#E8DE*/,
        "fontStyle": ""
      }
    },
    {
      "scope": [],
      "settings": {
        "foreground": "#4499FFDD",
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        "keyword.other.debugger"
      ],
      "settings": {
        "foreground": "#FC5C" /*#FC5D*/,
        "fontStyle": "bold underline"
      }
    }
    // #endregion
  ]
}
/*
3 6 9 C F

#333 #336 #339 #33C #33F
#633 #636 #639 #63C #63F
#933 #936 #939 #93C #93F
#C33 #C36 #C39 #C3C #C3F
#F33 #F36 #F39 #F3C #F3F

#363 #366 #369 #36C #36F
#663 #666 #669 #66C #66F
#963 #966 #969 #96C #96F
#C63 #C66 #C69 #C6C #C6F
#F63 #F66 #F69 #F6C #F6F

#393 #396 #399 #39C #39C
#693 #696 #699 #69C #69F
#993 #996 #999 #99C #99F
#C93 #C96 #C99 #C9C #C9F
#F93 #F96 #F99 #F9C #F9F

#3C3 #3C6 #3C9 #3CC #3CF
#6C3 #6C6 #6C9 #6CC #6CF
#9C3 #9C6 #9C9 #9CC #9CF
#CC3 #CC6 #CC9 #CCC #CCF
#FC3 #FC6 #FC9 #FCC #FCF

#3F3 #3F6 #3F9 #3FC #3FF
#6F3 #6F6 #6F9 #6FC #6FF
#9F3 #9F6 #9F9 #9FC #9FF
#CF3 #CF6 #CF9 #CFC #CFF
#FF3 #FF6 #FF9 #FFC #FFF


*/
/*
3 6 9 C F

#333 #336 #339 #33C #33F
#633 #636 #639 #63C #63F
#933 #936 #939 #93C #93F
#C33 #C36 #C39 #C3C #C3F
#F33 #F36 #F39 #F3C #F3F
#363 #366 #369 #36C #36F
#663 #666 #669 #66C #66F
#963 #966 #969 #96C #96F
#C63 #C66 #C69 #C6C #C6F
#F63 #F66 #F69 #F6C #F6F
#393 #396 #399 #39C #39C
#693 #696 #699 #69C #69F
#993 #996 #999 #99C #99F
#C93 #C96 #C99 #C9C #C9F
#F93 #F96 #F99 #F9C #F9F
#3C3 #3C6 #3C9 #3CC #3CF
#6C3 #6C6 #6C9 #6CC #6CF
#9C3 #9C6 #9C9 #9CC #9CF
#CC3 #CC6 #CC9 #CCC #CCF
#FC3 #FC6 #FC9 #FCC #FCF
#3F3 #3F6 #3F9 #3FC #3FF
#6F3 #6F6 #6F9 #6FC #6FF
#9F3 #9F6 #9F9 #9FC #9FF
#CF3 #CF6 #CF9 #CFC #CFF
#FF3 #FF6 #FF9 #FFC #FFF

#333
#666
#999
#CCC
#FFF

#F33#F63#F93#FC3#FF3

#333#363#393#3C3#3F3

#F33 #F36#F39#F3C#F3F
3 6 9 C F

*/
